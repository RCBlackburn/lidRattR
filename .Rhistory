med = median(x, na.rm = T)
mean = mean(x, na.rm= T)
data.frame(med = med, mean = mean)
} )
test <- apply(fullvox[,-c(1:3,21:24)], MARGIN = 2, FUN = function(x){
med = median(x, na.rm = T)
mean = mean(x, na.rm= T)
data.frame(med = med, mean = mean)
} )
do.call(rbind, test)
##### Summarized voxel metrics
### Start by summarizing individual voxel metrics
voxel_summ <- fullvox %>% summarise(z_med_med = median(med_z_vox, na.rm = T),
z_med_mean = mean(med_z_vox, na.rm = T),
z_med_var = var(med_z_vox, na.rm = T),
z_med_sd = sd(med_z_vox, na.rm = T),
z_med_cv = sd(med_z_vox, na.rm = T)/mean(med_z_vox, na.rm = T),
z_med_IQR = IQR(med_z_vox, na.rm = T),
z_med_skew = (sum((med_z_vox - mean(med_z_vox, na.rm = T))^3,na.rm = T)/nrow(vox))/(sum((med_z_vox - mean(med_z_vox, na.rm = T))^2,na.rm = T)/nrow(vox))^(3/2),
z_med_kurt = nrow(vox)*sum((med_z_vox- mean(med_z_vox, na.rm = T))^4, na.rm = T)/(sum((med_z_vox - mean(med_z_vox, na.rm = T))^2, na.rm = T)^2),
z_mean_med = median(mean_z_vox, na.rm = T),
z_mean_mean = mean(mean_z_vox, na.rm = T),
z_mean_var = var(mean_z_vox, na.rm = T),
z_mean_sd = sd(mean_z_vox, na.rm = T),
z_mean_cv = sd(mean_z_vox, na.rm = T)/mean(mean_z_vox, na.rm = T),
z_mean_IQR = IQR(mean_z_vox, na.rm = T),
z_mean_skew = (sum((mean_z_vox - mean(mean_z_vox, na.rm = T))^3,na.rm = T)/nrow(vox))/(sum((mean_z_vox - mean(mean_z_vox, na.rm = T))^2,na.rm = T)/nrow(vox))^(3/2),
z_mean_kurt = nrow(vox)*sum((mean_z_vox- mean(mean_z_vox, na.rm = T))^4, na.rm = T)/(sum((mean_z_vox - mean(mean_z_vox, na.rm = T))^2, na.rm = T)^2),
z_var_med = median(var_z_vox, na.rm = T),
z_var_mean = mean(var_z_vox, na.rm = T),
z_var_var = var(var_z_vox, na.rm = T),
z_var_sd = sd(var_z_vox, na.rm = T),
z_var_cv = sd(var_z_vox, na.rm = T)/mean(var_z_vox, na.rm = T),
z_var_IQR = IQR(var_z_vox, na.rm = T),
z_var_skew = (sum((var_z_vox - mean(var_z_vox, na.rm = T))^3,na.rm = T)/nrow(vox))/(sum((var_z_vox - mean(var_z_vox, na.rm = T))^2,na.rm = T)/nrow(vox))^(3/2),
z_var_kurt = nrow(vox)*sum((var_z_vox- mean(var_z_vox, na.rm = T))^4, na.rm = T)/(sum((var_z_vox - mean(var_z_vox, na.rm = T))^2, na.rm = T)^2),
z_sd_med = median(sd_z_vox, na.rm = T),
z_sd_mean = mean(sd_z_vox, na.rm = T),
z_sd_var = var(sd_z_vox, na.rm = T),
z_sd_sd = sd(sd_z_vox, na.rm = T),
z_sd_cv = sd(sd_z_vox, na.rm = T)/mean(sd_z_vox, na.rm = T),
z_sd_IQR = IQR(sd_z_vox, na.rm = T),
z_sd_skew =(sum((sd_z_vox - mean(sd_z_vox, na.rm = T))^3,na.rm = T)/nrow(vox))/(sum((sd_z_vox - mean(sd_z_vox, na.rm = T))^2,na.rm = T)/nrow(vox))^(3/2),
z_sd_kurt = nrow(vox)*sum((sd_z_vox- mean(sd_z_vox, na.rm = T))^4, na.rm = T)/(sum((sd_z_vox - mean(sd_z_vox, na.rm = T))^2, na.rm = T)^2),
z_cv_med = median(cv_z_vox, na.rm = T),
z_cv_mean = mean(cv_z_vox, na.rm = T),
z_cv_var = var(cv_z_vox, na.rm = T),
z_cv_sd = sd(cv_z_vox, na.rm = T),
z_cv_cv = sd(cv_z_vox, na.rm = T)/mean(cv_z_vox, na.rm = T),
z_cv_IQR = IQR(cv_z_vox, na.rm = T),
z_cv_skew = (sum((cv_z_vox - mean(cv_z_vox, na.rm = T))^3,na.rm = T)/nrow(vox))/(sum((cv_z_vox - mean(cv_z_vox, na.rm = T))^2,na.rm = T)/nrow(vox))^(3/2),
z_cv_kurt = nrow(vox)*sum((cv_z_vox- mean(cv_z_vox, na.rm = T))^4, na.rm = T)/(sum((cv_z_vox - mean(cv_z_vox, na.rm = T))^2, na.rm = T)^2),
z_IQR_med = median(IQR_z_vox, na.rm = T),
z_IQR_mean = mean(IQR_z_vox, na.rm = T),
z_IQR_var = var(IQR_z_vox, na.rm = T),
z_IQR_sd = sd(IQR_z_vox, na.rm = T),
z_IQR_cv = sd(IQR_z_vox, na.rm = T)/mean(IQR_z_vox, na.rm = T),
z_IQR_IQR = IQR(IQR_z_vox, na.rm = T),
z_IQR_skew =(sum((IQR_z_vox - mean(IQR_z_vox, na.rm = T))^3,na.rm = T)/nrow(vox))/(sum((IQR_z_vox - mean(IQR_z_vox, na.rm = T))^2,na.rm = T)/nrow(vox))^(3/2),
z_IQR_kurt = nrow(vox)*sum((IQR_z_vox- mean(IQR_z_vox, na.rm = T))^4, na.rm = T)/(sum((IQR_z_vox - mean(IQR_z_vox, na.rm = T))^2, na.rm = T)^2),
z_skew_med = median(skew_z_vox, na.rm = T),
z_skew_mean = mean(skew_z_vox, na.rm = T),
z_skew_var = var(skew_z_vox, na.rm = T),
z_skew_sd = sd(skew_z_vox, na.rm = T),
z_skew_cv = sd(skew_z_vox, na.rm = T)/mean(skew_z_vox, na.rm = T),
z_skew_IQR = IQR(skew_z_vox, na.rm = T),
z_skew_skew = (sum((skew_z_vox - mean(skew_z_vox, na.rm = T))^3,na.rm = T)/nrow(vox))/(sum((skew_z_vox - mean(skew_z_vox, na.rm = T))^2,na.rm = T)/nrow(vox))^(3/2),
z_skew_kurt = nrow(vox)*sum((skew_z_vox- mean(skew_z_vox, na.rm = T))^4, na.rm = T)/(sum((skew_z_vox - mean(skew_z_vox, na.rm = T))^2, na.rm = T)^2),
z_kurt_med = median(kurt_z_vox, na.rm = T),
z_kurt_mean = mean(kurt_z_vox, na.rm = T),
z_kurt_var = var(kurt_z_vox, na.rm = T),
z_kurt_sd = sd(kurt_z_vox, na.rm = T),
z_kurt_cv = sd(kurt_z_vox, na.rm = T)/mean(kurt_z_vox, na.rm = T),
z_kurt_IQR = IQR(kurt_z_vox, na.rm = T),
z_kurt_skew = (sum((kurt_z_vox - mean(kurt_z_vox, na.rm = T))^3,na.rm = T)/nrow(vox))/(sum((kurt_z_vox - mean(kurt_z_vox, na.rm = T))^2,na.rm = T)/nrow(vox))^(3/2),
z_kurt_kurt = nrow(vox)*sum((kurt_z_vox- mean(kurt_z_vox, na.rm = T))^4, na.rm = T)/(sum((kurt_z_vox - mean(kurt_z_vox, na.rm = T))^2, na.rm = T)^2),
i_vox_med = median(med_i_vox, na.rm = T),
i_med_mean = mean(med_i_vox, na.rm = T),
i_med_var = var(med_i_vox, na.rm = T),
i_med_sd = sd(med_i_vox, na.rm = T),
i_med_cv = sd(med_i_vox, na.rm = T)/mean(med_i_vox, na.rm = T),
i_med_IQR = IQR(med_i_vox, na.rm = T),
i_med_skew = (sum((med_i_vox - mean(med_i_vox, na.rm = T))^3,na.rm = T)/nrow(vox))/(sum((med_i_vox - mean(med_i_vox, na.rm = T))^2,na.rm = T)/nrow(vox))^(3/2),
i_med_kurt = nrow(vox)*sum((med_i_vox- mean(med_i_vox, na.rm = T))^4, na.rm = T)/(sum((med_i_vox - mean(med_i_vox, na.rm = T))^2, na.rm = T)^2),
i_mean_med = median(mean_i_vox, na.rm = T),
i_mean_mean = mean(mean_i_vox, na.rm = T),
i_mean_var = var(mean_i_vox, na.rm = T),
i_mean_sd = sd(mean_i_vox, na.rm = T),
i_mean_cv = sd(mean_i_vox, na.rm = T)/mean(mean_i_vox, na.rm = T),
i_mean_IQR = IQR(mean_i_vox, na.rm = T),
i_mean_skew =  (sum((mean_i_vox - mean(mean_i_vox, na.rm = T))^3,na.rm = T)/nrow(vox))/(sum((mean_i_vox - mean(mean_i_vox, na.rm = T))^2,na.rm = T)/nrow(vox))^(3/2),
i_mean_kurt = nrow(vox)*sum((mean_i_vox- mean(mean_i_vox, na.rm = T))^4, na.rm = T)/(sum((mean_i_vox - mean(mean_i_vox, na.rm = T))^2, na.rm = T)^2),
i_var_med = median(var_i_vox, na.rm = T),
i_var_mean = mean(var_i_vox, na.rm = T),
i_var_var = var(var_i_vox, na.rm = T),
i_var_sd = sd(var_i_vox, na.rm = T),
i_var_cv = sd(var_i_vox, na.rm = T)/mean(var_i_vox, na.rm = T),
i_var_IQR = IQR(var_i_vox, na.rm = T),
i_var_skew =  (sum((var_i_vox - mean(var_i_vox, na.rm = T))^3,na.rm = T)/nrow(vox))/(sum((var_i_vox - mean(var_i_vox, na.rm = T))^2,na.rm = T)/nrow(vox))^(3/2),
i_var_kurt = nrow(vox)*sum((var_i_vox- mean(var_i_vox, na.rm = T))^4, na.rm = T)/(sum((var_i_vox - mean(var_i_vox, na.rm = T))^2, na.rm = T)^2),
i_sd_med = median(sd_i_vox, na.rm = T),
i_sd_mean = mean(sd_i_vox, na.rm = T),
i_sd_var = var(sd_i_vox, na.rm = T),
i_sd_sd = sd(sd_i_vox, na.rm = T),
i_sd_cv = sd(sd_i_vox, na.rm = T)/mean(sd_i_vox, na.rm = T),
i_sd_IQR = IQR(sd_i_vox, na.rm = T),
i_sd_skew =  (sum((sd_i_vox - mean(sd_i_vox, na.rm = T))^3,na.rm = T)/nrow(vox))/(sum((sd_i_vox - mean(sd_i_vox, na.rm = T))^2,na.rm = T)/nrow(vox))^(3/2),
i_sd_kurt = nrow(vox)*sum((sd_i_vox- mean(sd_i_vox, na.rm = T))^4, na.rm = T)/(sum((sd_i_vox - mean(sd_i_vox, na.rm = T))^2, na.rm = T)^2),
i_cv_med = median(cv_i_vox, na.rm = T),
i_cv_mean = mean(cv_i_vox, na.rm = T),
i_cv_var = var(cv_i_vox, na.rm = T),
i_cv_sd = sd(cv_i_vox, na.rm = T),
i_cv_cv = sd(cv_i_vox, na.rm = T)/mean(cv_i_vox, na.rm = T),
i_cv_IQR = IQR(cv_i_vox, na.rm = T),
i_cv_skew =  (sum((cv_i_vox - mean(cv_i_vox, na.rm = T))^3,na.rm = T)/nrow(vox))/(sum((cv_i_vox - mean(cv_i_vox, na.rm = T))^2,na.rm = T)/nrow(vox))^(3/2),
i_cv_kurt = nrow(vox)*sum((cv_i_vox- mean(cv_i_vox, na.rm = T))^4, na.rm = T)/(sum((cv_i_vox - mean(cv_i_vox, na.rm = T))^2, na.rm = T)^2),
i_IQR_med = median(IQR_i_vox, na.rm = T),
i_IQR_mean = mean(IQR_i_vox, na.rm = T),
i_IQR_var = var(IQR_i_vox, na.rm = T),
i_IQR_sd = sd(IQR_i_vox, na.rm = T),
i_IQR_cv = sd(IQR_i_vox, na.rm = T)/mean(IQR_i_vox, na.rm = T),
i_IQR_IQR = IQR(IQR_i_vox, na.rm = T),
i_IQR_skew =  (sum((IQR_i_vox - mean(IQR_i_vox, na.rm = T))^3,na.rm = T)/nrow(vox))/(sum((IQR_i_vox - mean(IQR_i_vox, na.rm = T))^2,na.rm = T)/nrow(vox))^(3/2),
i_IQR_kurt = nrow(vox)*sum((IQR_i_vox- mean(IQR_i_vox, na.rm = T))^4, na.rm = T)/(sum((IQR_i_vox - mean(IQR_i_vox, na.rm = T))^2, na.rm = T)^2),
i_skew_med = median(skew_i_vox, na.rm = T),
i_skew_mean = mean(skew_i_vox, na.rm = T),
i_skew_var = var(skew_i_vox, na.rm = T),
i_skew_sd = sd(skew_i_vox, na.rm = T),
i_skew_cv = sd(skew_i_vox, na.rm = T)/mean(skew_i_vox, na.rm = T),
i_skew_IQR = IQR(skew_i_vox, na.rm = T),
i_skew_skew =  (sum((skew_i_vox - mean(skew_i_vox, na.rm = T))^3,na.rm = T)/nrow(vox))/(sum((skew_i_vox - mean(skew_i_vox, na.rm = T))^2,na.rm = T)/nrow(vox))^(3/2),
i_skew_kurt = nrow(vox)*sum((skew_i_vox- mean(skew_i_vox, na.rm = T))^4, na.rm = T)/(sum((skew_i_vox - mean(skew_i_vox, na.rm = T))^2, na.rm = T)^2),
i_kurt_med = median(kurt_i_vox, na.rm = T),
i_kurt_mean = mean(kurt_i_vox, na.rm = T),
i_kurt_var = var(kurt_i_vox, na.rm = T),
i_kurt_sd = sd(kurt_i_vox, na.rm = T),
i_kurt_cv = sd(kurt_i_vox, na.rm = T)/mean(kurt_i_vox, na.rm = T),
i_kurt_IQR = IQR(kurt_i_vox, na.rm = T),
i_kurt_skew =  (sum((kurt_i_vox - mean(kurt_i_vox, na.rm = T))^3,na.rm = T)/nrow(vox))/(sum((kurt_i_vox - mean(kurt_i_vox, na.rm = T))^2,na.rm = T)/nrow(vox))^(3/2),
i_kurt_kurt = nrow(vox)*sum((kurt_i_vox- mean(kurt_i_vox, na.rm = T))^4, na.rm = T)/(sum((kurt_i_vox - mean(kurt_i_vox, na.rm = T))^2, na.rm = T)^2),
P_Di_med = median(npoints_below, na.rm = T),
P_Di_mean = mean(npoints_below, na.rm = T),
P_Di_var = var(npoints_below, na.rm = T),
P_Di_sd = sd(npoints_below, na.rm = T),
P_Di_cv = sd(npoints_below, na.rm = T)/mean(npoints_below, na.rm = T),
P_Di_IQR = IQR(npoints_below, na.rm = T),
P_Di_skew =  (sum((npoints_below - mean(npoints_below, na.rm = T))^3,na.rm = T)/nrow(vox))/(sum((npoints_below - mean(npoints_below, na.rm = T))^2,na.rm = T)/nrow(vox))^(3/2),
P_Di_kurt = nrow(vox)*sum((npoints_below- mean(npoints_below, na.rm = T))^4, na.rm = T)/(sum((npoints_below - mean(npoints_below, na.rm = T))^2, na.rm = T)^2),
npoints_above_med = median(npoints_above, na.rm = T),
npoints_above_mean = mean(npoints_above, na.rm = T),
npoints_above_var = var(npoints_above, na.rm = T),
npoints_above_sd = sd(npoints_above, na.rm = T),
npoints_above_cv = sd(npoints_above, na.rm = T)/mean(npoints_above, na.rm = T),
npoints_above_IQR = IQR(npoints_above, na.rm = T),
npoints_above_skew =  (sum((npoints_above - mean(npoints_above, na.rm = T))^3,na.rm = T)/nrow(vox))/(sum((npoints_above - mean(npoints_above, na.rm = T))^2,na.rm = T)/nrow(vox))^(3/2),
npoints_above_kurt = nrow(vox)*sum((npoints_above- mean(npoints_above, na.rm = T))^4, na.rm = T)/(sum((npoints_above - mean(npoints_above, na.rm = T))^2, na.rm = T)^2),
FR_Di_med = median(FR_Di, na.rm = T),
FR_Di_mean = mean(FR_Di, na.rm = T),
FR_Di_var = var(FR_Di, na.rm = T),
FR_Di_sd = sd(FR_Di, na.rm = T),
FR_Di_cv = sd(FR_Di, na.rm = T)/mean(FR_Di, na.rm = T),
FR_Di_IQR = IQR(FR_Di, na.rm = T),
FR_Di_skew =  (sum((FR_Di - mean(FR_Di, na.rm = T))^3,na.rm = T)/nrow(vox))/(sum((FR_Di - mean(FR_Di, na.rm = T))^2,na.rm = T)/nrow(vox))^(3/2),
FR_Di_kurt = nrow(vox)*sum((FR_Di- mean(FR_Di, na.rm = T))^4, na.rm = T)/(sum((FR_Di - mean(FR_Di, na.rm = T))^2, na.rm = T)^2),
i_Di_med = median(i_Di, na.rm = T),
i_Di_mean = mean(i_Di, na.rm = T),
i_Di_var = var(i_Di, na.rm = T),
i_Di_sd = sd(i_Di, na.rm = T),
i_Di_cv = sd(i_Di, na.rm = T)/mean(i_Di, na.rm = T),
i_Di_IQR = IQR(i_Di, na.rm = T),
i_Di_skew =  (sum((i_Di - mean(i_Di, na.rm = T))^3,na.rm = T)/nrow(vox))/(sum((i_Di - mean(i_Di, na.rm = T))^2,na.rm = T)/nrow(vox))^(3/2),
i_Di_kurt = nrow(vox)*sum((i_Di- mean(i_Di, na.rm = T))^4, na.rm = T)/(sum((i_Di - mean(i_Di, na.rm = T))^2, na.rm = T)^2),
pct_fill_vox = nrow(vox) /nrow(fullvox)
)
View(voxel_summ)
is.na(voxel_summ)
which(is.na(voxel_summ))
detach("package:magrittr", unload = TRUE)
devtools::document()
las <- readLAS("test.las")
plot(las)
sf_poly <- st_read("test.shp")
resolution = 1
vox <- lidR::voxel_metrics(las, func = vox_mt(Z, as.numeric(Intensity)), res = resolution)
# create all possible voxels
x = seq(min(vox$X), max(vox$X), resolution)
y = seq(min(vox$Y), max(vox$Y), resolution)
z = seq(min(vox$Z), max(vox$Z), resolution)
all_vox = expand.grid(X = x, Y = y, Z = z)
data.table::setDT(all_vox)
# merge all and voxel_metrics() output
fullvox = vox[all_vox, on = c("X", "Y", "Z")]
fullvox.df <- as.data.frame(fullvox)
full_vox.sf <- st_as_sf(fullvox.df, coords = c('X', 'Y'), crs = st_crs(sf_poly))
st_agr(sf_poly) = "constant"
st_agr(full_vox.sf) = "constant"
fullvox.crop <- st_intersection(sf_poly, full_vox.sf)
fullvox <- cbind(X = st_coordinates(fullvox.crop)[,1], Y = st_coordinates(fullvox.crop)[,2],
fullvox.crop[,c(which(colnames(fullvox.crop) =="Z"):ncol(fullvox.crop))])
fullvox <- as.data.frame(fullvox)
# give each voxel a unique id and assign 0s and NAs where appropriate
fullvox <- fullvox %>% mutate(id_xyz = paste0(X,"-",Y,"-",Z))
fullvox$SVi[is.na(fullvox$SVi)] <- 0
null_list <- lapply(fullvox$Z_list,is.null)
fullvox$Z_list[do.call(rbind,null_list)] <- NA
fullvox$I_list[do.call(rbind,null_list)] <- NA
fullvox$I_list<- lapply( fullvox$I_list, "length<-", max(lengths( fullvox$I_list)))
fullvox$Z_list<- lapply(fullvox$Z_list, "length<-", max(lengths(fullvox$Z_list)))
##### Individual voxel metrics
### FR_SVi is the frequency ratio of the number of returns in a voxel in relation to total returns (in Pearse et al. 2019 this is FR_Di)
fullvox <- fullvox %>% mutate(FR_SVi = SVi/sum(fullvox$SVi))
### P_Di is the number of returns below each voxel (Pearse et al. 2019; Kim et al. 2016 uses returns above)
# create a vector for Z in each iteration
unique_Z = unique(fullvox$Z)
# calculate points below each voxel
point_blow <- lapply(unique_Z, function(x) fullvox %>%
group_by(X,Y) %>%
filter(Z < x) %>%
summarize(npoints_below = sum(SVi), Z= x))
# extract point below data and merge using the voxel id
point_blow_all_vox <- do.call(rbind,point_blow)
point_blow_all_vox <- point_blow_all_vox %>% mutate(id_xyz = paste0(X,"-",Y,"-",Z))
fullvox <- fullvox %>% left_join(as.data.frame(point_blow_all_vox[,c(3,5)]), by = "id_xyz", )
### P_Di_above is the number of returns above each voxel (Kim et al. 2016 uses returns above as P_Di)
# calculate points below each voxel
point_above <- lapply(unique_Z, function(x) fullvox %>%
group_by(X,Y) %>%
filter(Z > x) %>%
summarize(npoints_above = sum(SVi,na.rm = T), Z= x))
# extract point below data and merge using the voxel id
point_above_all_vox <- do.call(rbind,point_above)
point_above_all_vox <- point_above_all_vox %>% mutate(id_xyz = paste0(X,"-",Y,"-",Z))
fullvox <- fullvox %>% left_join(as.data.frame(point_above_all_vox[,c(3,5)]), by = "id_xyz", )
# NAs returned for 0 points so it is appropriate to replace them with 0
fullvox$npoints_above[is.na(fullvox$npoints_above)] <- 0
### FR_Di is the frequency ratio of the number of returns above a voxel in relation to total returns (Kim et al. 2016)
fullvox <- fullvox %>% mutate(FR_Di = npoints_above/sum(fullvox$SVi))
### I_Di is the median intensity of returns above each voxel
# calculate median intensity above each voxel
i_above <- lapply(unique_Z, function(x) {
i_a <- fullvox %>% filter(Z > x)
if(nrow(i_a) == 0){
fullvox %>% group_by(X,Y) %>% summarize(Z = x, i_Di = NA)
} else{
i_abv <- data.table::as.data.table(do.call(rbind, i_a$I_list))
i_a_merge <- cbind(data.table::as.data.table(i_a[1:2]), i_abv)
i_Di_mt <- i_a_merge %>% data.table::melt(id = c("X","Y")) %>%
group_by(X,Y) %>%
summarize(Z = x, i_Di = median(value, na.rm = T))
}
}
)
med_z_vox <- fullvox$med_z_vox
# extract point below data and merge using the voxel id
i_above_all_vox <- do.call(rbind,i_above)
i_above_all_vox <- i_above_all_vox %>% mutate(id_xyz = paste0(X,"-",Y,"-",Z))
fullvox <- fullvox %>% left_join(as.data.frame(i_above_all_vox[,c(4,5)]), by = "id_xyz" )
##### Summarized voxel metrics
### Start by summarizing individual voxel metrics
voxel_summ <- fullvox %>% summarise(z_med_med = median(med_z_vox, na.rm = T),
z_med_mean = mean(med_z_vox, na.rm = T),
z_med_var = var(med_z_vox, na.rm = T),
z_med_sd = sd(med_z_vox, na.rm = T),
z_med_cv = sd(med_z_vox, na.rm = T)/mean(med_z_vox, na.rm = T),
z_med_IQR = IQR(med_z_vox, na.rm = T),
z_med_skew = (sum((med_z_vox - mean(med_z_vox, na.rm = T))^3,na.rm = T)/nrow(vox))/(sum((med_z_vox - mean(med_z_vox, na.rm = T))^2,na.rm = T)/nrow(vox))^(3/2),
z_med_kurt = nrow(vox)*sum((med_z_vox- mean(med_z_vox, na.rm = T))^4, na.rm = T)/(sum((med_z_vox - mean(med_z_vox, na.rm = T))^2, na.rm = T)^2),
z_mean_med = median(mean_z_vox, na.rm = T),
z_mean_mean = mean(mean_z_vox, na.rm = T),
z_mean_var = var(mean_z_vox, na.rm = T),
z_mean_sd = sd(mean_z_vox, na.rm = T),
z_mean_cv = sd(mean_z_vox, na.rm = T)/mean(mean_z_vox, na.rm = T),
z_mean_IQR = IQR(mean_z_vox, na.rm = T),
z_mean_skew = (sum((mean_z_vox - mean(mean_z_vox, na.rm = T))^3,na.rm = T)/nrow(vox))/(sum((mean_z_vox - mean(mean_z_vox, na.rm = T))^2,na.rm = T)/nrow(vox))^(3/2),
z_mean_kurt = nrow(vox)*sum((mean_z_vox- mean(mean_z_vox, na.rm = T))^4, na.rm = T)/(sum((mean_z_vox - mean(mean_z_vox, na.rm = T))^2, na.rm = T)^2),
z_var_med = median(var_z_vox, na.rm = T),
z_var_mean = mean(var_z_vox, na.rm = T),
z_var_var = var(var_z_vox, na.rm = T),
z_var_sd = sd(var_z_vox, na.rm = T),
z_var_cv = sd(var_z_vox, na.rm = T)/mean(var_z_vox, na.rm = T),
z_var_IQR = IQR(var_z_vox, na.rm = T),
z_var_skew = (sum((var_z_vox - mean(var_z_vox, na.rm = T))^3,na.rm = T)/nrow(vox))/(sum((var_z_vox - mean(var_z_vox, na.rm = T))^2,na.rm = T)/nrow(vox))^(3/2),
z_var_kurt = nrow(vox)*sum((var_z_vox- mean(var_z_vox, na.rm = T))^4, na.rm = T)/(sum((var_z_vox - mean(var_z_vox, na.rm = T))^2, na.rm = T)^2),
z_sd_med = median(sd_z_vox, na.rm = T),
z_sd_mean = mean(sd_z_vox, na.rm = T),
z_sd_var = var(sd_z_vox, na.rm = T),
z_sd_sd = sd(sd_z_vox, na.rm = T),
z_sd_cv = sd(sd_z_vox, na.rm = T)/mean(sd_z_vox, na.rm = T),
z_sd_IQR = IQR(sd_z_vox, na.rm = T),
z_sd_skew =(sum((sd_z_vox - mean(sd_z_vox, na.rm = T))^3,na.rm = T)/nrow(vox))/(sum((sd_z_vox - mean(sd_z_vox, na.rm = T))^2,na.rm = T)/nrow(vox))^(3/2),
z_sd_kurt = nrow(vox)*sum((sd_z_vox- mean(sd_z_vox, na.rm = T))^4, na.rm = T)/(sum((sd_z_vox - mean(sd_z_vox, na.rm = T))^2, na.rm = T)^2),
z_cv_med = median(cv_z_vox, na.rm = T),
z_cv_mean = mean(cv_z_vox, na.rm = T),
z_cv_var = var(cv_z_vox, na.rm = T),
z_cv_sd = sd(cv_z_vox, na.rm = T),
z_cv_cv = sd(cv_z_vox, na.rm = T)/mean(cv_z_vox, na.rm = T),
z_cv_IQR = IQR(cv_z_vox, na.rm = T),
z_cv_skew = (sum((cv_z_vox - mean(cv_z_vox, na.rm = T))^3,na.rm = T)/nrow(vox))/(sum((cv_z_vox - mean(cv_z_vox, na.rm = T))^2,na.rm = T)/nrow(vox))^(3/2),
z_cv_kurt = nrow(vox)*sum((cv_z_vox- mean(cv_z_vox, na.rm = T))^4, na.rm = T)/(sum((cv_z_vox - mean(cv_z_vox, na.rm = T))^2, na.rm = T)^2),
z_IQR_med = median(IQR_z_vox, na.rm = T),
z_IQR_mean = mean(IQR_z_vox, na.rm = T),
z_IQR_var = var(IQR_z_vox, na.rm = T),
z_IQR_sd = sd(IQR_z_vox, na.rm = T),
z_IQR_cv = sd(IQR_z_vox, na.rm = T)/mean(IQR_z_vox, na.rm = T),
z_IQR_IQR = IQR(IQR_z_vox, na.rm = T),
z_IQR_skew =(sum((IQR_z_vox - mean(IQR_z_vox, na.rm = T))^3,na.rm = T)/nrow(vox))/(sum((IQR_z_vox - mean(IQR_z_vox, na.rm = T))^2,na.rm = T)/nrow(vox))^(3/2),
z_IQR_kurt = nrow(vox)*sum((IQR_z_vox- mean(IQR_z_vox, na.rm = T))^4, na.rm = T)/(sum((IQR_z_vox - mean(IQR_z_vox, na.rm = T))^2, na.rm = T)^2),
z_skew_med = median(skew_z_vox, na.rm = T),
z_skew_mean = mean(skew_z_vox, na.rm = T),
z_skew_var = var(skew_z_vox, na.rm = T),
z_skew_sd = sd(skew_z_vox, na.rm = T),
z_skew_cv = sd(skew_z_vox, na.rm = T)/mean(skew_z_vox, na.rm = T),
z_skew_IQR = IQR(skew_z_vox, na.rm = T),
z_skew_skew = (sum((skew_z_vox - mean(skew_z_vox, na.rm = T))^3,na.rm = T)/nrow(vox))/(sum((skew_z_vox - mean(skew_z_vox, na.rm = T))^2,na.rm = T)/nrow(vox))^(3/2),
z_skew_kurt = nrow(vox)*sum((skew_z_vox- mean(skew_z_vox, na.rm = T))^4, na.rm = T)/(sum((skew_z_vox - mean(skew_z_vox, na.rm = T))^2, na.rm = T)^2),
z_kurt_med = median(kurt_z_vox, na.rm = T),
z_kurt_mean = mean(kurt_z_vox, na.rm = T),
z_kurt_var = var(kurt_z_vox, na.rm = T),
z_kurt_sd = sd(kurt_z_vox, na.rm = T),
z_kurt_cv = sd(kurt_z_vox, na.rm = T)/mean(kurt_z_vox, na.rm = T),
z_kurt_IQR = IQR(kurt_z_vox, na.rm = T),
z_kurt_skew = (sum((kurt_z_vox - mean(kurt_z_vox, na.rm = T))^3,na.rm = T)/nrow(vox))/(sum((kurt_z_vox - mean(kurt_z_vox, na.rm = T))^2,na.rm = T)/nrow(vox))^(3/2),
z_kurt_kurt = nrow(vox)*sum((kurt_z_vox- mean(kurt_z_vox, na.rm = T))^4, na.rm = T)/(sum((kurt_z_vox - mean(kurt_z_vox, na.rm = T))^2, na.rm = T)^2),
i_vox_med = median(med_i_vox, na.rm = T),
i_med_mean = mean(med_i_vox, na.rm = T),
i_med_var = var(med_i_vox, na.rm = T),
i_med_sd = sd(med_i_vox, na.rm = T),
i_med_cv = sd(med_i_vox, na.rm = T)/mean(med_i_vox, na.rm = T),
i_med_IQR = IQR(med_i_vox, na.rm = T),
i_med_skew = (sum((med_i_vox - mean(med_i_vox, na.rm = T))^3,na.rm = T)/nrow(vox))/(sum((med_i_vox - mean(med_i_vox, na.rm = T))^2,na.rm = T)/nrow(vox))^(3/2),
i_med_kurt = nrow(vox)*sum((med_i_vox- mean(med_i_vox, na.rm = T))^4, na.rm = T)/(sum((med_i_vox - mean(med_i_vox, na.rm = T))^2, na.rm = T)^2),
i_mean_med = median(mean_i_vox, na.rm = T),
i_mean_mean = mean(mean_i_vox, na.rm = T),
i_mean_var = var(mean_i_vox, na.rm = T),
i_mean_sd = sd(mean_i_vox, na.rm = T),
i_mean_cv = sd(mean_i_vox, na.rm = T)/mean(mean_i_vox, na.rm = T),
i_mean_IQR = IQR(mean_i_vox, na.rm = T),
i_mean_skew =  (sum((mean_i_vox - mean(mean_i_vox, na.rm = T))^3,na.rm = T)/nrow(vox))/(sum((mean_i_vox - mean(mean_i_vox, na.rm = T))^2,na.rm = T)/nrow(vox))^(3/2),
i_mean_kurt = nrow(vox)*sum((mean_i_vox- mean(mean_i_vox, na.rm = T))^4, na.rm = T)/(sum((mean_i_vox - mean(mean_i_vox, na.rm = T))^2, na.rm = T)^2),
i_var_med = median(var_i_vox, na.rm = T),
i_var_mean = mean(var_i_vox, na.rm = T),
i_var_var = var(var_i_vox, na.rm = T),
i_var_sd = sd(var_i_vox, na.rm = T),
i_var_cv = sd(var_i_vox, na.rm = T)/mean(var_i_vox, na.rm = T),
i_var_IQR = IQR(var_i_vox, na.rm = T),
i_var_skew =  (sum((var_i_vox - mean(var_i_vox, na.rm = T))^3,na.rm = T)/nrow(vox))/(sum((var_i_vox - mean(var_i_vox, na.rm = T))^2,na.rm = T)/nrow(vox))^(3/2),
i_var_kurt = nrow(vox)*sum((var_i_vox- mean(var_i_vox, na.rm = T))^4, na.rm = T)/(sum((var_i_vox - mean(var_i_vox, na.rm = T))^2, na.rm = T)^2),
i_sd_med = median(sd_i_vox, na.rm = T),
i_sd_mean = mean(sd_i_vox, na.rm = T),
i_sd_var = var(sd_i_vox, na.rm = T),
i_sd_sd = sd(sd_i_vox, na.rm = T),
i_sd_cv = sd(sd_i_vox, na.rm = T)/mean(sd_i_vox, na.rm = T),
i_sd_IQR = IQR(sd_i_vox, na.rm = T),
i_sd_skew =  (sum((sd_i_vox - mean(sd_i_vox, na.rm = T))^3,na.rm = T)/nrow(vox))/(sum((sd_i_vox - mean(sd_i_vox, na.rm = T))^2,na.rm = T)/nrow(vox))^(3/2),
i_sd_kurt = nrow(vox)*sum((sd_i_vox- mean(sd_i_vox, na.rm = T))^4, na.rm = T)/(sum((sd_i_vox - mean(sd_i_vox, na.rm = T))^2, na.rm = T)^2),
i_cv_med = median(cv_i_vox, na.rm = T),
i_cv_mean = mean(cv_i_vox, na.rm = T),
i_cv_var = var(cv_i_vox, na.rm = T),
i_cv_sd = sd(cv_i_vox, na.rm = T),
i_cv_cv = sd(cv_i_vox, na.rm = T)/mean(cv_i_vox, na.rm = T),
i_cv_IQR = IQR(cv_i_vox, na.rm = T),
i_cv_skew =  (sum((cv_i_vox - mean(cv_i_vox, na.rm = T))^3,na.rm = T)/nrow(vox))/(sum((cv_i_vox - mean(cv_i_vox, na.rm = T))^2,na.rm = T)/nrow(vox))^(3/2),
i_cv_kurt = nrow(vox)*sum((cv_i_vox- mean(cv_i_vox, na.rm = T))^4, na.rm = T)/(sum((cv_i_vox - mean(cv_i_vox, na.rm = T))^2, na.rm = T)^2),
i_IQR_med = median(IQR_i_vox, na.rm = T),
i_IQR_mean = mean(IQR_i_vox, na.rm = T),
i_IQR_var = var(IQR_i_vox, na.rm = T),
i_IQR_sd = sd(IQR_i_vox, na.rm = T),
i_IQR_cv = sd(IQR_i_vox, na.rm = T)/mean(IQR_i_vox, na.rm = T),
i_IQR_IQR = IQR(IQR_i_vox, na.rm = T),
i_IQR_skew =  (sum((IQR_i_vox - mean(IQR_i_vox, na.rm = T))^3,na.rm = T)/nrow(vox))/(sum((IQR_i_vox - mean(IQR_i_vox, na.rm = T))^2,na.rm = T)/nrow(vox))^(3/2),
i_IQR_kurt = nrow(vox)*sum((IQR_i_vox- mean(IQR_i_vox, na.rm = T))^4, na.rm = T)/(sum((IQR_i_vox - mean(IQR_i_vox, na.rm = T))^2, na.rm = T)^2),
i_skew_med = median(skew_i_vox, na.rm = T),
i_skew_mean = mean(skew_i_vox, na.rm = T),
i_skew_var = var(skew_i_vox, na.rm = T),
i_skew_sd = sd(skew_i_vox, na.rm = T),
i_skew_cv = sd(skew_i_vox, na.rm = T)/mean(skew_i_vox, na.rm = T),
i_skew_IQR = IQR(skew_i_vox, na.rm = T),
i_skew_skew =  (sum((skew_i_vox - mean(skew_i_vox, na.rm = T))^3,na.rm = T)/nrow(vox))/(sum((skew_i_vox - mean(skew_i_vox, na.rm = T))^2,na.rm = T)/nrow(vox))^(3/2),
i_skew_kurt = nrow(vox)*sum((skew_i_vox- mean(skew_i_vox, na.rm = T))^4, na.rm = T)/(sum((skew_i_vox - mean(skew_i_vox, na.rm = T))^2, na.rm = T)^2),
i_kurt_med = median(kurt_i_vox, na.rm = T),
i_kurt_mean = mean(kurt_i_vox, na.rm = T),
i_kurt_var = var(kurt_i_vox, na.rm = T),
i_kurt_sd = sd(kurt_i_vox, na.rm = T),
i_kurt_cv = sd(kurt_i_vox, na.rm = T)/mean(kurt_i_vox, na.rm = T),
i_kurt_IQR = IQR(kurt_i_vox, na.rm = T),
i_kurt_skew =  (sum((kurt_i_vox - mean(kurt_i_vox, na.rm = T))^3,na.rm = T)/nrow(vox))/(sum((kurt_i_vox - mean(kurt_i_vox, na.rm = T))^2,na.rm = T)/nrow(vox))^(3/2),
i_kurt_kurt = nrow(vox)*sum((kurt_i_vox- mean(kurt_i_vox, na.rm = T))^4, na.rm = T)/(sum((kurt_i_vox - mean(kurt_i_vox, na.rm = T))^2, na.rm = T)^2),
P_Di_med = median(npoints_below, na.rm = T),
P_Di_mean = mean(npoints_below, na.rm = T),
P_Di_var = var(npoints_below, na.rm = T),
P_Di_sd = sd(npoints_below, na.rm = T),
P_Di_cv = sd(npoints_below, na.rm = T)/mean(npoints_below, na.rm = T),
P_Di_IQR = IQR(npoints_below, na.rm = T),
P_Di_skew =  (sum((npoints_below - mean(npoints_below, na.rm = T))^3,na.rm = T)/nrow(vox))/(sum((npoints_below - mean(npoints_below, na.rm = T))^2,na.rm = T)/nrow(vox))^(3/2),
P_Di_kurt = nrow(vox)*sum((npoints_below- mean(npoints_below, na.rm = T))^4, na.rm = T)/(sum((npoints_below - mean(npoints_below, na.rm = T))^2, na.rm = T)^2),
npoints_above_med = median(npoints_above, na.rm = T),
npoints_above_mean = mean(npoints_above, na.rm = T),
npoints_above_var = var(npoints_above, na.rm = T),
npoints_above_sd = sd(npoints_above, na.rm = T),
npoints_above_cv = sd(npoints_above, na.rm = T)/mean(npoints_above, na.rm = T),
npoints_above_IQR = IQR(npoints_above, na.rm = T),
npoints_above_skew =  (sum((npoints_above - mean(npoints_above, na.rm = T))^3,na.rm = T)/nrow(vox))/(sum((npoints_above - mean(npoints_above, na.rm = T))^2,na.rm = T)/nrow(vox))^(3/2),
npoints_above_kurt = nrow(vox)*sum((npoints_above- mean(npoints_above, na.rm = T))^4, na.rm = T)/(sum((npoints_above - mean(npoints_above, na.rm = T))^2, na.rm = T)^2),
FR_Di_med = median(FR_Di, na.rm = T),
FR_Di_mean = mean(FR_Di, na.rm = T),
FR_Di_var = var(FR_Di, na.rm = T),
FR_Di_sd = sd(FR_Di, na.rm = T),
FR_Di_cv = sd(FR_Di, na.rm = T)/mean(FR_Di, na.rm = T),
FR_Di_IQR = IQR(FR_Di, na.rm = T),
FR_Di_skew =  (sum((FR_Di - mean(FR_Di, na.rm = T))^3,na.rm = T)/nrow(vox))/(sum((FR_Di - mean(FR_Di, na.rm = T))^2,na.rm = T)/nrow(vox))^(3/2),
FR_Di_kurt = nrow(vox)*sum((FR_Di- mean(FR_Di, na.rm = T))^4, na.rm = T)/(sum((FR_Di - mean(FR_Di, na.rm = T))^2, na.rm = T)^2),
i_Di_med = median(i_Di, na.rm = T),
i_Di_mean = mean(i_Di, na.rm = T),
i_Di_var = var(i_Di, na.rm = T),
i_Di_sd = sd(i_Di, na.rm = T),
i_Di_cv = sd(i_Di, na.rm = T)/mean(i_Di, na.rm = T),
i_Di_IQR = IQR(i_Di, na.rm = T),
i_Di_skew =  (sum((i_Di - mean(i_Di, na.rm = T))^3,na.rm = T)/nrow(vox))/(sum((i_Di - mean(i_Di, na.rm = T))^2,na.rm = T)/nrow(vox))^(3/2),
i_Di_kurt = nrow(vox)*sum((i_Di- mean(i_Di, na.rm = T))^4, na.rm = T)/(sum((i_Di - mean(i_Di, na.rm = T))^2, na.rm = T)^2),
pct_fill_vox = nrow(vox) /nrow(fullvox)
)
View(voxel_summ)
# find the median z for the voxels with highest number of points (SVi) for each
SVM <- fullvox %>% group_by(X,Y) %>%
summarize(Z = Z[which.max(SVi)], SVM_density = max(SVi), median_Z = med_z_vox[which.max(SVi)])
SVM_list <- apply(SVM, MARGIN = 1, FUN = function(x) {
vox_above <- fullvox %>% filter(Z > x["Z"] & X == x["X"] & Y == x["Y"])
hts_above <- as.numeric(do.call(cbind,vox_above$Z_list))
SVM_all_mts <- data.frame(SVM_med = median(hts_above, na.rm = T))
SVM_all_mts <- as.data.frame(cbind(X = x["X"], Y = x["Y"], Z = x["Z"],
median_Z_above = median(hts_above, na.rm = T),
mean_Z_above = mean(hts_above, na.rm = T),
sd_Z_above = sd(hts_above, na.rm = T),
var_Z_above = sd(hts_above, na.rm = T)^2,
cv_Z_above = sd(hts_above, na.rm = T)/ mean(hts_above, na.rm = T),
IQR_Z_above = IQR(hts_above, na.rm = T),
skew_Z_above = e1071::skewness(hts_above, na.rm = T),
kurt_Z_above = e1071::kurtosis(hts_above, na.rm = T)))
}
)
# extract calculated metrics
SVM_all <- do.call(rbind, SVM_list)
SVM_all <- SVM %>% left_join(SVM_all)
# create averages fro each metric (e.g., sd, variance, skewness)
SVM_summ <- SVM_all %>% ungroup() %>%
summarise(SVM_mean = mean(mean_Z_above, na.rm = T), SVM_median = mean(median_Z_above, na.rm = T),
SVM_sd = mean(sd_Z_above, na.rm = T), SVM_var = mean(var_Z_above, na.rm = T),
SVM_cv = mean(cv_Z_above, na.rm = T), SVM_cv = mean(cv_Z_above, na.rm = T),
SVM_IQR = mean(IQR_Z_above, na.rm = T), SVM_skew = mean(skew_Z_above, na.rm = T),
SVM_kurt = mean(kurt_Z_above, na.rm = T))
voxel_summ <- cbind(voxel_summ, SVM_summ)
# create column indicating if voxel has returns (1) or does not (0)
fullvox$empty <- ifelse(fullvox$SVi == 0, 0,1)
# for loop to calculate the proportion of empty voxels in each height bin (voxel height)
p <- lapply(unique_Z, function(x){
proportion <- fullvox %>% filter(Z == x) %>% summarize(p0 = sum(empty)/sum(fullvox$empty))
})
p <- do.call(rbind,p)
# calculate the different diversity indicies similar to Ehbrecht et al. (2016) and Pearse et al. (2019)
p <-  p %>% mutate(pln = p0*log(p0))
p <- p %>% mutate(p2 = p0^2)
ENL_d0 <- sum(p$p0^0)
ENL_d1 <- exp(-sum(p$pln)) ## exponential Shannon-Index
ENL_d2 <- 1/sum(p$p2) ## inverse Simpson-Index
# add indicies to voxel_summ df
voxel_summ <- cbind(voxel_summ, ENL_d0, ENL_d1, ENL_d2)
thr_above = seq(from = 3, to = 21, by = 3)
cc_list <- lapply(thr_above, function(x) {
cc_above <- fullvox %>%
filter(if(x < max(thr_above)) {Z <= x} else(Z <= max(Z))) %>%
summarize(cc = sum(empty)/n())
}
)
names(cc_list) <- paste0("cc_above", thr_above)
# extract canopy closure and prepare to merge with voxel_summ
cc_above <- do.call(rbind, cc_list)
cc_above_df <- as.data.frame(t(cc_above[,1]))
colnames(cc_above_df) <- rownames(cc_above)
# add closure metrics to voxel_summ df
voxel_summ <- cbind(voxel_summ, cc_above_df)
ht_bin = c(1, 5, 10, 15, 20)
npoints_XY <- fullvox %>% group_by(X,Y) %>% summarize(npoints = sum(SVi, na.rm = T))
pcc_list  <-  lapply(ht_bin, function(x) {
point_density <- fullvox %>%
filter(if(x < max(ht_bin)) { Z >=x & Z < (x+1)}  else(Z >= max(ht_bin))) %>%
group_by(X,Y) %>%
summarize(pt_density = sum(SVi))
if(nrow(point_density) == 0) {return(NULL)} else{
point_density$pcc = point_density$pt_density/ npoints_XY$npoints
point_density$ht_bin <- x
return(point_density)
}
} )
pcc_bins <- do.call(rbind, pcc_list)
pcc_bins$pcc[is.na(pcc_bins$pcc)] <- 0
pcc_XY <- pcc_bins %>% group_by(X,Y) %>% summarise(pcc = sum(pcc))
pcc <- mean(pcc_XY$pcc)
voxel_summ <- cbind(voxel_summ, pcc = pcc)
### VCI is a measure of the eveness or simulatiry of point densitys
### of height bins within a given las based on Shannon diversity index
ht_bin <- c(.5,1,2,3,4,5)
vci_list <- lapply(ht_bin, function(x) {
VCI <- lidR::VCI(las@data$Z, max(las@data$Z), by =  x)
})
names(vci_list) <- paste0("vci_bin", ht_bin)
vci_all <- t(as.data.frame(do.call(rbind,vci_list))[1])
voxel_sum <- cbind(voxel_summ, vci_all)
return(voxel_summ)
devtools::document()
devtools::document()
devtools::load_all()
devtools::document()
