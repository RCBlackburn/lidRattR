names(pct_fill_vox) <- paste0(names(pct_fill_vox), "_", res)
data <- data.frame(c(means, meds, var, sd, cv, IQR, skew, kurt, pct_fill_vox))
return(data)
}
plot_metrics <- vox_sum(las_vox, 2)
View(plot_metrics)
View(plot_metrics)
vox_sum_raster <- function(SVi, FRDi, PDi){
las_vox <- data.frame(SVi, FRDi, PDi, PDI_above)
means <- apply(las_vox, 2, mean, na.rm = TRUE)
names(means)<- paste0(names(means), "_", res, "_", "mean")
meds <- apply(las_vox, 2, median, na.rm = TRUE)
names(meds)<- paste0(names(meds), "_",  res, "_","med")
var <- apply(las_vox, 2, var, na.rm = TRUE)
names(var)<- paste0(names(var), "_", res, "_", "var")
sd <- apply(las_vox, 2, sd, na.rm = TRUE)
names(sd)<- paste0(names(sd), "_", res, "_", "sd")
cv <- apply(las_vox, 2, function(x) {sd(x, na.rm = T)/mean(x, na.rm = T)})
names(cv)<- paste0(names(cv), "_", res, "_", "cv")
IQR <- apply(las_vox, 2,IQR, na.rm = T)
names(IQR)<- paste0(names(IQR), "_", res, "_", "IQR")
skew <- apply(las_vox, 2, function(x) {(sum((x - mean(x, na.rm = T))^3,na.rm = T)
/length(x))/(sum((x - mean(x, na.rm = T))^2,na.rm = T)
/length(x))^(3/2)})
names(skew)<- paste0(names(skew), "_", res, "_", "skew")
kurt <- apply(las_vox, 2, function(x) {length(x)*sum((x- mean(x, na.rm = T))^4, na.rm = T)/
(sum((x - mean(x, na.rm = T))^2, na.rm = T)^2)})
names(kurt)<- paste0(names(var), "_", res, "_", "kurt")
pct_fill_vox <- data.frame(pct_fill_vox = as.numeric(table(las_vox$SVi== 0)[1])/ length(las_vox$SVi))
names(pct_fill_vox) <- paste0(names(pct_fill_vox), "_", res)
return(list(means, meds, var, sd, cv, IQR, skew, kurt, pct_fill_vox))
}
.vox_raster <- ~vox_sum_raster(SVi, FRDi, PDi)
las_vox <- vox(las_plot, res = 2)
vox_sum_raster <- function(SVi, FRDi, PDi, res){
las_vox <- data.frame(SVi, FRDi, PDi, PDI_above)
means <- apply(las_vox, 2, mean, na.rm = TRUE)
names(means)<- paste0(names(means), "_", res, "_", "mean")
meds <- apply(las_vox, 2, median, na.rm = TRUE)
names(meds)<- paste0(names(meds), "_",  res, "_","med")
var <- apply(las_vox, 2, var, na.rm = TRUE)
names(var)<- paste0(names(var), "_", res, "_", "var")
sd <- apply(las_vox, 2, sd, na.rm = TRUE)
names(sd)<- paste0(names(sd), "_", res, "_", "sd")
cv <- apply(las_vox, 2, function(x) {sd(x, na.rm = T)/mean(x, na.rm = T)})
names(cv)<- paste0(names(cv), "_", res, "_", "cv")
IQR <- apply(las_vox, 2,IQR, na.rm = T)
names(IQR)<- paste0(names(IQR), "_", res, "_", "IQR")
skew <- apply(las_vox, 2, function(x) {(sum((x - mean(x, na.rm = T))^3,na.rm = T)
/length(x))/(sum((x - mean(x, na.rm = T))^2,na.rm = T)
/length(x))^(3/2)})
names(skew)<- paste0(names(skew), "_", res, "_", "skew")
kurt <- apply(las_vox, 2, function(x) {length(x)*sum((x- mean(x, na.rm = T))^4, na.rm = T)/
(sum((x - mean(x, na.rm = T))^2, na.rm = T)^2)})
names(kurt)<- paste0(names(var), "_", res, "_", "kurt")
pct_fill_vox <- data.frame(pct_fill_vox = as.numeric(table(las_vox$SVi== 0)[1])/ length(las_vox$SVi))
names(pct_fill_vox) <- paste0(names(pct_fill_vox), "_", res)
return(list(means, meds, var, sd, cv, IQR, skew, kurt, pct_fill_vox))
}
.vox_raster <- ~vox_sum_raster(SVi, FRDi, PDi, res)
## run function across larger las at a defined pixel resolution
v_metrics <- pixel_metrics(las_vox, func = .vox_raster(res = 2), res = 20)
vox_sum_raster <- function(SVi, FRDi, PDi, res){
las_vox <- data.frame(SVi, FRDi, PDi, PDI_above)
means <- apply(las_vox, 2, mean, na.rm = TRUE)
names(means)<- paste0(names(means), "_", "mean")
meds <- apply(las_vox, 2, median, na.rm = TRUE)
names(meds)<- paste0(names(meds), "_","med")
var <- apply(las_vox, 2, var, na.rm = TRUE)
names(var)<- paste0(names(var), "_", "var")
sd <- apply(las_vox, 2, sd, na.rm = TRUE)
names(sd)<- paste0(names(sd), "_",  "sd")
cv <- apply(las_vox, 2, function(x) {sd(x, na.rm = T)/mean(x, na.rm = T)})
names(cv)<- paste0(names(cv), "_", "cv")
IQR <- apply(las_vox, 2,IQR, na.rm = T)
names(IQR)<- paste0(names(IQR), "_", "IQR")
skew <- apply(las_vox, 2, function(x) {(sum((x - mean(x, na.rm = T))^3,na.rm = T)
/length(x))/(sum((x - mean(x, na.rm = T))^2,na.rm = T)
/length(x))^(3/2)})
names(skew)<- paste0(names(skew), "_","skew")
kurt <- apply(las_vox, 2, function(x) {length(x)*sum((x- mean(x, na.rm = T))^4, na.rm = T)/
(sum((x - mean(x, na.rm = T))^2, na.rm = T)^2)})
names(kurt)<- paste0(names(var), "_", "kurt")
pct_fill_vox <- data.frame(pct_fill_vox = as.numeric(table(las_vox$SVi== 0)[1])/ length(las_vox$SVi))
names(pct_fill_vox) <- paste0(names(pct_fill_vox))
return(list(means, meds, var, sd, cv, IQR, skew, kurt, pct_fill_vox))
}
.vox_raster <- ~vox_sum_raster(SVi, FRDi, PDi)
## run function across larger las at a defined pixel resolution
v_metrics <- pixel_metrics(las_vox, func = .vox_raster(), res = 20)
.vox_raster <- ~vox_sum_raster(SVi, FRDi, PDi)
## run function across larger las at a defined pixel resolution
v_metrics <- pixel_metrics(las_vox, func = .vox_raster(), res = 20)
.vox_raster <- ~vox_sum_raster(SVi, FRDi, PDi)
.vox_raster
## run function across larger las at a defined pixel resolution
v_metrics <- pixel_metrics(las_vox, func = .vox_raster, res = 20)
.vox_raster <- ~vox_sum_raster(SVi, FRDi, PDi, PDI_above)
## run function across larger las at a defined pixel resolution
v_metrics <- pixel_metrics(las_vox, func = .vox_raster, res = 20)
.vox_raster <- ~vox_sum_raster(SVi, FRDi, PDi, PDi_above)
## run function across larger las at a defined pixel resolution
v_metrics <- pixel_metrics(las_vox, func = .vox_raster, res = 20)
vox_sum_raster <- function(SVi, FRDi, PDi, PDi_above){
las_vox <- data.frame(SVi, FRDi, PDi, PDI_above)
means <- apply(las_vox, 2, mean, na.rm = TRUE)
names(means)<- paste0(names(means), "_", "mean")
meds <- apply(las_vox, 2, median, na.rm = TRUE)
names(meds)<- paste0(names(meds), "_","med")
var <- apply(las_vox, 2, var, na.rm = TRUE)
names(var)<- paste0(names(var), "_", "var")
sd <- apply(las_vox, 2, sd, na.rm = TRUE)
names(sd)<- paste0(names(sd), "_",  "sd")
cv <- apply(las_vox, 2, function(x) {sd(x, na.rm = T)/mean(x, na.rm = T)})
names(cv)<- paste0(names(cv), "_", "cv")
IQR <- apply(las_vox, 2,IQR, na.rm = T)
names(IQR)<- paste0(names(IQR), "_", "IQR")
skew <- apply(las_vox, 2, function(x) {(sum((x - mean(x, na.rm = T))^3,na.rm = T)
/length(x))/(sum((x - mean(x, na.rm = T))^2,na.rm = T)
/length(x))^(3/2)})
names(skew)<- paste0(names(skew), "_","skew")
kurt <- apply(las_vox, 2, function(x) {length(x)*sum((x- mean(x, na.rm = T))^4, na.rm = T)/
(sum((x - mean(x, na.rm = T))^2, na.rm = T)^2)})
names(kurt)<- paste0(names(var), "_", "kurt")
pct_fill_vox <- data.frame(pct_fill_vox = as.numeric(table(las_vox$SVi== 0)[1])/ length(las_vox$SVi))
names(pct_fill_vox) <- paste0(names(pct_fill_vox))
return(list(means, meds, var, sd, cv, IQR, skew, kurt, pct_fill_vox))
}
.vox_raster <- ~vox_sum_raster(SVi, FRDi, PDi, PDi_above)
## run function across larger las at a defined pixel resolution
v_metrics <- pixel_metrics(las_vox, func = .vox_raster, res = 20)
.vox_raster <- ~vox_sum_raster(SVi, FRDi, PDi, PDi_above)
las_vox
las_vox@data
vox_sum_raster <- function(SVi, FRDi, PDi, PDi_above){
las_vox <- data.frame(SVi, FRDi, PDi, PDI_above)
means <- apply(las_vox, 2, mean, na.rm = TRUE)
names(means)<- paste0(names(means), "_", "mean")
meds <- apply(las_vox, 2, median, na.rm = TRUE)
names(meds)<- paste0(names(meds), "_","med")
var <- apply(las_vox, 2, var, na.rm = TRUE)
names(var)<- paste0(names(var), "_", "var")
sd <- apply(las_vox, 2, sd, na.rm = TRUE)
names(sd)<- paste0(names(sd), "_",  "sd")
cv <- apply(las_vox, 2, function(x) {sd(x, na.rm = T)/mean(x, na.rm = T)})
names(cv)<- paste0(names(cv), "_", "cv")
IQR <- apply(las_vox, 2,IQR, na.rm = T)
names(IQR)<- paste0(names(IQR), "_", "IQR")
skew <- apply(las_vox, 2, function(x) {(sum((x - mean(x, na.rm = T))^3,na.rm = T)
/length(x))/(sum((x - mean(x, na.rm = T))^2,na.rm = T)
/length(x))^(3/2)})
names(skew)<- paste0(names(skew), "_","skew")
kurt <- apply(las_vox, 2, function(x) {length(x)*sum((x- mean(x, na.rm = T))^4, na.rm = T)/
(sum((x - mean(x, na.rm = T))^2, na.rm = T)^2)})
names(kurt)<- paste0(names(var), "_", "kurt")
pct_fill_vox <- data.frame(pct_fill_vox = as.numeric(table(las_vox$SVi== 0)[1])/ length(las_vox$SVi))
names(pct_fill_vox) <- paste0(names(pct_fill_vox))
return(list(means, meds, var, sd, cv, IQR, skew, kurt, pct_fill_vox))
}
.vox_raster <- ~vox_sum_raster(SVi, FRDi, PDi, PDi_above)
las_vox <- vox(las_plot, res = 2)
plot_metrics <- vox_sum(las_vox, 2)
View(plot_metrics)
## run function across larger las at a defined pixel resolution
v_metrics <- pixel_metrics(las_vox, func = .vox_raster, res = 20)
.vox_raster <- ~vox_sum_raster(SVi, FRDi, PDi, PDi_above)
vox_sum_raster <- function(SVi, FRDi, PDi, PDi_above){
las_vox <- data.frame(SVi, FRDi, PDi, PDi_above)
means <- apply(las_vox, 2, mean, na.rm = TRUE)
names(means)<- paste0(names(means), "_", "mean")
meds <- apply(las_vox, 2, median, na.rm = TRUE)
names(meds)<- paste0(names(meds), "_","med")
var <- apply(las_vox, 2, var, na.rm = TRUE)
names(var)<- paste0(names(var), "_", "var")
sd <- apply(las_vox, 2, sd, na.rm = TRUE)
names(sd)<- paste0(names(sd), "_",  "sd")
cv <- apply(las_vox, 2, function(x) {sd(x, na.rm = T)/mean(x, na.rm = T)})
names(cv)<- paste0(names(cv), "_", "cv")
IQR <- apply(las_vox, 2,IQR, na.rm = T)
names(IQR)<- paste0(names(IQR), "_", "IQR")
skew <- apply(las_vox, 2, function(x) {(sum((x - mean(x, na.rm = T))^3,na.rm = T)
/length(x))/(sum((x - mean(x, na.rm = T))^2,na.rm = T)
/length(x))^(3/2)})
names(skew)<- paste0(names(skew), "_","skew")
kurt <- apply(las_vox, 2, function(x) {length(x)*sum((x- mean(x, na.rm = T))^4, na.rm = T)/
(sum((x - mean(x, na.rm = T))^2, na.rm = T)^2)})
names(kurt)<- paste0(names(var), "_", "kurt")
pct_fill_vox <- data.frame(pct_fill_vox = as.numeric(table(las_vox$SVi== 0)[1])/ length(las_vox$SVi))
names(pct_fill_vox) <- paste0(names(pct_fill_vox))
return(list(means, meds, var, sd, cv, IQR, skew, kurt, pct_fill_vox))
}
.vox_raster <- ~vox_sum_raster(SVi, FRDi, PDi, PDi_above)
## run function across larger las at a defined pixel resolution
v_metrics <- pixel_metrics(las_vox, func = .vox_raster, res = 20)
las_vox <- data.table(SVi, FRDi, PDi, PDi_above)
vox_sum_raster <- function(SVi, FRDi, PDi, PDi_above){
las_vox <- data.table(SVi, FRDi, PDi, PDi_above)
means <- apply(las_vox, 2, mean, na.rm = TRUE)
names(means)<- paste0(names(means), "_", "mean")
meds <- apply(las_vox, 2, median, na.rm = TRUE)
names(meds)<- paste0(names(meds), "_","med")
var <- apply(las_vox, 2, var, na.rm = TRUE)
names(var)<- paste0(names(var), "_", "var")
sd <- apply(las_vox, 2, sd, na.rm = TRUE)
names(sd)<- paste0(names(sd), "_",  "sd")
cv <- apply(las_vox, 2, function(x) {sd(x, na.rm = T)/mean(x, na.rm = T)})
names(cv)<- paste0(names(cv), "_", "cv")
IQR <- apply(las_vox, 2,IQR, na.rm = T)
names(IQR)<- paste0(names(IQR), "_", "IQR")
skew <- apply(las_vox, 2, function(x) {(sum((x - mean(x, na.rm = T))^3,na.rm = T)
/length(x))/(sum((x - mean(x, na.rm = T))^2,na.rm = T)
/length(x))^(3/2)})
names(skew)<- paste0(names(skew), "_","skew")
kurt <- apply(las_vox, 2, function(x) {length(x)*sum((x- mean(x, na.rm = T))^4, na.rm = T)/
(sum((x - mean(x, na.rm = T))^2, na.rm = T)^2)})
names(kurt)<- paste0(names(var), "_", "kurt")
pct_fill_vox <- data.frame(pct_fill_vox = as.numeric(table(las_vox$SVi== 0)[1])/ length(las_vox$SVi))
names(pct_fill_vox) <- paste0(names(pct_fill_vox))
return(list(means, meds, var, sd, cv, IQR, skew, kurt, pct_fill_vox))
}
.vox_raster <- ~vox_sum_raster(SVi, FRDi, PDi, PDi_above)
## run function across larger las at a defined pixel resolution
v_metrics <- pixel_metrics(las_vox, func = .vox_raster, res = 20)
vox_sum_raster <- function(SVi, FRDi, PDi, PDi_above){
las_vox <- c(SVi, FRDi, PDi, PDi_above)
means <- apply(las_vox, 2, mean, na.rm = TRUE)
names(means)<- paste0(names(means), "_", "mean")
meds <- apply(las_vox, 2, median, na.rm = TRUE)
names(meds)<- paste0(names(meds), "_","med")
var <- apply(las_vox, 2, var, na.rm = TRUE)
names(var)<- paste0(names(var), "_", "var")
sd <- apply(las_vox, 2, sd, na.rm = TRUE)
names(sd)<- paste0(names(sd), "_",  "sd")
cv <- apply(las_vox, 2, function(x) {sd(x, na.rm = T)/mean(x, na.rm = T)})
names(cv)<- paste0(names(cv), "_", "cv")
IQR <- apply(las_vox, 2,IQR, na.rm = T)
names(IQR)<- paste0(names(IQR), "_", "IQR")
skew <- apply(las_vox, 2, function(x) {(sum((x - mean(x, na.rm = T))^3,na.rm = T)
/length(x))/(sum((x - mean(x, na.rm = T))^2,na.rm = T)
/length(x))^(3/2)})
names(skew)<- paste0(names(skew), "_","skew")
kurt <- apply(las_vox, 2, function(x) {length(x)*sum((x- mean(x, na.rm = T))^4, na.rm = T)/
(sum((x - mean(x, na.rm = T))^2, na.rm = T)^2)})
names(kurt)<- paste0(names(var), "_", "kurt")
pct_fill_vox <- data.frame(pct_fill_vox = as.numeric(table(las_vox$SVi== 0)[1])/ length(las_vox$SVi))
names(pct_fill_vox) <- paste0(names(pct_fill_vox))
return(list(means, meds, var, sd, cv, IQR, skew, kurt, pct_fill_vox))
}
.vox_raster <- ~vox_sum_raster(SVi, FRDi, PDi, PDi_above)
## run function across larger las at a defined pixel resolution
v_metrics <- pixel_metrics(las_vox, func = .vox_raster, res = 20)
las_vox <- c(SVi, FRDi, PDi, PDi_above)
las_vox <- c(las_vox$SVi, las_vox$FRDi, las_vox$PDi, las_vox$PDi_above)
las_vox
las_vox <- vox(las_plot, res = 2)
las_vox <- cbind(las_vox$SVi, las_vox$FRDi, las_vox$PDi, las_vox$PDi_above)
View(las_vox)
vox_sum_raster <- function(SVi, FRDi, PDi, PDi_above){
las_vox <- cbind(SVi, FRDi, PDi, PDi_above)
means <- apply(las_vox, 2, mean, na.rm = TRUE)
names(means)<- paste0(names(means), "_", "mean")
meds <- apply(las_vox, 2, median, na.rm = TRUE)
names(meds)<- paste0(names(meds), "_","med")
var <- apply(las_vox, 2, var, na.rm = TRUE)
names(var)<- paste0(names(var), "_", "var")
sd <- apply(las_vox, 2, sd, na.rm = TRUE)
names(sd)<- paste0(names(sd), "_",  "sd")
cv <- apply(las_vox, 2, function(x) {sd(x, na.rm = T)/mean(x, na.rm = T)})
names(cv)<- paste0(names(cv), "_", "cv")
IQR <- apply(las_vox, 2,IQR, na.rm = T)
names(IQR)<- paste0(names(IQR), "_", "IQR")
skew <- apply(las_vox, 2, function(x) {(sum((x - mean(x, na.rm = T))^3,na.rm = T)
/length(x))/(sum((x - mean(x, na.rm = T))^2,na.rm = T)
/length(x))^(3/2)})
names(skew)<- paste0(names(skew), "_","skew")
kurt <- apply(las_vox, 2, function(x) {length(x)*sum((x- mean(x, na.rm = T))^4, na.rm = T)/
(sum((x - mean(x, na.rm = T))^2, na.rm = T)^2)})
names(kurt)<- paste0(names(var), "_", "kurt")
pct_fill_vox <- data.frame(pct_fill_vox = as.numeric(table(las_vox$SVi== 0)[1])/ length(las_vox$SVi))
names(pct_fill_vox) <- paste0(names(pct_fill_vox))
return(list(means, meds, var, sd, cv, IQR, skew, kurt, pct_fill_vox))
}
.vox_raster <- ~vox_sum_raster(SVi, FRDi, PDi, PDi_above)
las_vox <- vox(las_plot, res = 2)
## run function across larger las at a defined pixel resolution
v_metrics <- pixel_metrics(las_vox, func = .vox_raster, res = 20)
vox_sum_raster <- function(SVi, FRDi, PDi, PDi_above){
las_vox <- cbind(SVi, FRDi, PDi, PDi_above)
means <- apply(las_vox, 2, mean, na.rm = TRUE)
names(means)<- paste0(names(means), "_", "mean")
meds <- apply(las_vox, 2, median, na.rm = TRUE)
names(meds)<- paste0(names(meds), "_","med")
var <- apply(las_vox, 2, var, na.rm = TRUE)
names(var)<- paste0(names(var), "_", "var")
sd <- apply(las_vox, 2, sd, na.rm = TRUE)
names(sd)<- paste0(names(sd), "_",  "sd")
cv <- apply(las_vox, 2, function(x) {sd(x, na.rm = T)/mean(x, na.rm = T)})
names(cv)<- paste0(names(cv), "_", "cv")
IQR <- apply(las_vox, 2,IQR, na.rm = T)
names(IQR)<- paste0(names(IQR), "_", "IQR")
skew <- apply(las_vox, 2, function(x) {(sum((x - mean(x, na.rm = T))^3,na.rm = T)
/length(x))/(sum((x - mean(x, na.rm = T))^2,na.rm = T)
/length(x))^(3/2)})
names(skew)<- paste0(names(skew), "_","skew")
kurt <- apply(las_vox, 2, function(x) {length(x)*sum((x- mean(x, na.rm = T))^4, na.rm = T)/
(sum((x - mean(x, na.rm = T))^2, na.rm = T)^2)})
names(kurt)<- paste0(names(var), "_", "kurt")
pct_fill_vox <- data.frame(pct_fill_vox = as.numeric(table(las_vox[1]== 0)[1])/ length(las_vox[1]))
names(pct_fill_vox) <- paste0(names(pct_fill_vox))
return(list(means, meds, var, sd, cv, IQR, skew, kurt, pct_fill_vox))
}
.vox_raster <- ~vox_sum_raster(SVi, FRDi, PDi, PDi_above)
## run function across larger las at a defined pixel resolution
v_metrics <- pixel_metrics(las_vox, func = .vox_raster, res = 20)
las_vox <- cbind(las_vox$SVi, las_vox$FRDi, las_vox$PDi, las_vox$PDi_above)
View(las_vox)
means <- apply(las_vox, 2, mean, na.rm = TRUE)
names(means)<- paste0(names(means), "_", "mean")
meds <- apply(las_vox, 2, median, na.rm = TRUE)
names(meds)<- paste0(names(meds), "_","med")
var <- apply(las_vox, 2, var, na.rm = TRUE)
names(var)<- paste0(names(var), "_", "var")
sd <- apply(las_vox, 2, sd, na.rm = TRUE)
names(sd)<- paste0(names(sd), "_",  "sd")
cv <- apply(las_vox, 2, function(x) {sd(x, na.rm = T)/mean(x, na.rm = T)})
names(cv)<- paste0(names(cv), "_", "cv")
IQR <- apply(las_vox, 2,IQR, na.rm = T)
names(IQR)<- paste0(names(IQR), "_", "IQR")
skew <- apply(las_vox, 2, function(x) {(sum((x - mean(x, na.rm = T))^3,na.rm = T)
/length(x))/(sum((x - mean(x, na.rm = T))^2,na.rm = T)
/length(x))^(3/2)})
names(skew)<- paste0(names(skew), "_","skew")
kurt <- apply(las_vox, 2, function(x) {length(x)*sum((x- mean(x, na.rm = T))^4, na.rm = T)/
(sum((x - mean(x, na.rm = T))^2, na.rm = T)^2)})
names(kurt)<- paste0(names(var), "_", "kurt")
pct_fill_vox <- data.frame(pct_fill_vox = as.numeric(table(las_vox[1]== 0)[1])/ length(las_vox[1]))
names(pct_fill_vox) <- paste0(names(pct_fill_vox))
return(list(means, meds, var, sd, cv, IQR, skew, kurt, pct_fill_vox))
cbind(means, meds, var, sd, cv, IQR, skew, kurt, pct_fill_vox)
means
las_vox <- cbind(SVi, FRDi, PDi, PDi_above)
means <- apply(las_vox, 2, mean, na.rm = TRUE)
names(means)
names(las_vox)
las_vox <- cbind(SVi, FRDi, PDi, PDi_above)
names(las_vox)<- paste0("SVi", "FRDi", "PDi", "PDi_above")
means <- apply(las_vox, 2, mean, na.rm = TRUE)
names(means)<- paste0(names(means), "_", "mean")
meds <- apply(las_vox, 2, median, na.rm = TRUE)
names(meds)<- paste0(names(meds), "_","med")
var <- apply(las_vox, 2, var, na.rm = TRUE)
names(var)<- paste0(names(var), "_", "var")
sd <- apply(las_vox, 2, sd, na.rm = TRUE)
names(sd)<- paste0(names(sd), "_",  "sd")
cv <- apply(las_vox, 2, function(x) {sd(x, na.rm = T)/mean(x, na.rm = T)})
names(cv)<- paste0(names(cv), "_", "cv")
IQR <- apply(las_vox, 2,IQR, na.rm = T)
names(IQR)<- paste0(names(IQR), "_", "IQR")
skew <- apply(las_vox, 2, function(x) {(sum((x - mean(x, na.rm = T))^3,na.rm = T)
/length(x))/(sum((x - mean(x, na.rm = T))^2,na.rm = T)
/length(x))^(3/2)})
names(skew)<- paste0(names(skew), "_","skew")
kurt <- apply(las_vox, 2, function(x) {length(x)*sum((x- mean(x, na.rm = T))^4, na.rm = T)/
(sum((x - mean(x, na.rm = T))^2, na.rm = T)^2)})
names(kurt)<- paste0(names(var), "_", "kurt")
pct_fill_vox <- data.frame(pct_fill_vox = as.numeric(table(las_vox[1]== 0)[1])/ length(las_vox[1]))
names(pct_fill_vox) <- paste0(names(pct_fill_vox))
cbind(means, meds, var, sd, cv, IQR, skew, kurt, pct_fill_vox)
means
names(means)
names(las_vox)
names(las_vox)
las_vox <- data.frame(SVi, FRDi, PDi, PDi_above)
las_vox <- as.data.frame(SVi, FRDi, PDi, PDi_above)
las_vox <- data.frame(las_vox$SVi, las_vox$FRDi, las_vox$PDi, las_vox$PDi_above)
las_vox <- vox(las_plot, res = 2)
las_vox <- data.frame(las_vox$SVi, las_vox$FRDi, las_vox$PDi, las_vox$PDi_above)
names(las_vox)
las_vox <- data.table(las_vox$SVi, las_vox$FRDi, las_vox$PDi, las_vox$PDi_above)
las_vox <- vox(las_plot, res = 2)
las_vox <- data.table(las_vox$SVi, las_vox$FRDi, las_vox$PDi, las_vox$PDi_above)
View(las_vox)
names(las_vox)<- paste0("SVi", "FRDi", "PDi", "PDi_above")
names(las_vox)<- names("SVi", "FRDi", "PDi", "PDi_above")
names(las_vox)<- names(c("SVi", "FRDi", "PDi", "PDi_above"))
las_vox <- data.frame(SVi = SVi, FRDi = FRDi, PDi = PDi, PDi_above = PDi_above)
vox_sum_raster <- function(SVi, FRDi, PDi, PDi_above){
las_vox <- data.frame(SVi = SVi, FRDi = FRDi, PDi = PDi, PDi_above = PDi_above)
names(las_vox)<- names("SVi", "FRDi", "PDi", "PDi_above")
means <- apply(las_vox, 2, mean, na.rm = TRUE)
names(means)<- paste0(names(means), "_", "mean")
meds <- apply(las_vox, 2, median, na.rm = TRUE)
names(meds)<- paste0(names(meds), "_","med")
var <- apply(las_vox, 2, var, na.rm = TRUE)
names(var)<- paste0(names(var), "_", "var")
sd <- apply(las_vox, 2, sd, na.rm = TRUE)
names(sd)<- paste0(names(sd), "_",  "sd")
cv <- apply(las_vox, 2, function(x) {sd(x, na.rm = T)/mean(x, na.rm = T)})
names(cv)<- paste0(names(cv), "_", "cv")
IQR <- apply(las_vox, 2,IQR, na.rm = T)
names(IQR)<- paste0(names(IQR), "_", "IQR")
skew <- apply(las_vox, 2, function(x) {(sum((x - mean(x, na.rm = T))^3,na.rm = T)
/length(x))/(sum((x - mean(x, na.rm = T))^2,na.rm = T)
/length(x))^(3/2)})
names(skew)<- paste0(names(skew), "_","skew")
kurt <- apply(las_vox, 2, function(x) {length(x)*sum((x- mean(x, na.rm = T))^4, na.rm = T)/
(sum((x - mean(x, na.rm = T))^2, na.rm = T)^2)})
names(kurt)<- paste0(names(var), "_", "kurt")
pct_fill_vox <- data.frame(pct_fill_vox = as.numeric(table(las_vox[1]== 0)[1])/ length(las_vox[1]))
names(pct_fill_vox) <- paste0(names(pct_fill_vox))
data <- data.frame(c(means, meds, var, sd, cv, IQR, skew, kurt, pct_fill_vox))
return(data)
}
vox_sum_raster <- function(SVi, FRDi, PDi, PDi_above){
las_vox <- data.frame(SVi = SVi, FRDi = FRDi, PDi = PDi, PDi_above = PDi_above)
means <- apply(las_vox, 2, mean, na.rm = TRUE)
names(means)<- paste0(names(means), "_", "mean")
meds <- apply(las_vox, 2, median, na.rm = TRUE)
names(meds)<- paste0(names(meds), "_","med")
var <- apply(las_vox, 2, var, na.rm = TRUE)
names(var)<- paste0(names(var), "_", "var")
sd <- apply(las_vox, 2, sd, na.rm = TRUE)
names(sd)<- paste0(names(sd), "_",  "sd")
cv <- apply(las_vox, 2, function(x) {sd(x, na.rm = T)/mean(x, na.rm = T)})
names(cv)<- paste0(names(cv), "_", "cv")
IQR <- apply(las_vox, 2,IQR, na.rm = T)
names(IQR)<- paste0(names(IQR), "_", "IQR")
skew <- apply(las_vox, 2, function(x) {(sum((x - mean(x, na.rm = T))^3,na.rm = T)
/length(x))/(sum((x - mean(x, na.rm = T))^2,na.rm = T)
/length(x))^(3/2)})
names(skew)<- paste0(names(skew), "_","skew")
kurt <- apply(las_vox, 2, function(x) {length(x)*sum((x- mean(x, na.rm = T))^4, na.rm = T)/
(sum((x - mean(x, na.rm = T))^2, na.rm = T)^2)})
names(kurt)<- paste0(names(var), "_", "kurt")
pct_fill_vox <- data.frame(pct_fill_vox = as.numeric(table(las_vox[1]== 0)[1])/ length(las_vox[1]))
names(pct_fill_vox) <- paste0(names(pct_fill_vox))
data <- data.frame(c(means, meds, var, sd, cv, IQR, skew, kurt, pct_fill_vox))
return(data)
}
.vox_raster <- ~vox_sum_raster(SVi, FRDi, PDi, PDi_above)
las_vox <- vox(las_plot, res = 2)
plot_metrics <- vox_sum(las_vox, 2)
## run function across larger las at a defined pixel resolution
v_metrics <- pixel_metrics(las_vox, func = .vox_raster, res = 20)
plot(vmetrics)
plot(v_metrics)
las_vox <- vox(las, res = 2)
plot_metrics <- vox_sum(las_vox, 2)
## run function across larger las at a defined pixel resolution
v_metrics <- pixel_metrics(las_vox, func = .vox_raster, res = 20)
## plot output
plot(v_metrics)
_metrics
v_metrics
plot(v_metrics[33])
plot(v_metrics[[33]])
names(v_metrics[[33]])
names(v_metrics[[2]])
plot(v_metrics[[2]])
## install package and load library
devtools::install_github("RCBlackburn/lidRmts")
library(lidRmts)
devtools::install_github("RCBlackburn/lidRmts")
library(lidRmts)
## read in example plot from lidR package
LASfile <- system.file("extdata", "Megaplot.laz", package="lidR")
las <- readLAS(LASfile)
las_vox <- vox(las, res = 2)
plot_metrics <- vox_sum(las_vox, 2)
## run function across larger las at a defined pixel resolution
v_metrics <- pixel_metrics(las_vox, func = .vox_raster, res = 20)
## plot output
plot(v_metrics)
evtools::build_readme()
devtools::build_readme()
## install package and load library
# devtools::install_github("RCBlackburn/lidRmts")
library(lidR)
## install package and load library
# devtools::install_github("RCBlackburn/lidRmts")
library(lidR)
## install package and load library
# devtools::install_github("RCBlackburn/lidRmts")
library(lidR)
library(lidRmts)
vox_mt <- function(z)
{
SVi = length(z)
metrics =list(
SVi = SVi
)
return(metrics)}
## read in example plot from lidR package
LASfile <- system.file("extdata", "Megaplot.laz", package="lidR")
las <- readLAS(LASfile)
## install package and load library
# devtools::install_github("RCBlackburn/lidRmts")
library(lidR)
vox <- lidR::voxel_metrics(las, func = vox_mt(Z), res = res, all_voxels = TRUE)
vox <- lidR::voxel_metrics(las, func = vox_mt(Z), res = 2, all_voxels = TRUE)
vox
str(vox)
devtools::install_github("RCBlackburn/lidRmts")
detach("package:lidRmts", unload = TRUE)
devtools::install_github("RCBlackburn/lidRmts")
library(lidRmts)
lidRmts::
devtools::build()
devtools::install_github("RCBlackburn/lidRmts")
detach("package:lidRmts", unload = TRUE)
## install package and load library
devtools::install_github("RCBlackburn/lidRmts")
