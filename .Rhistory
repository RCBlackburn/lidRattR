point_above_all_vox <- do.call(rbind,point_above)
point_above_all_vox <- point_above_all_vox %>% mutate(id_xyz = paste0(X,"-",Y,"-",Z))
fullvox <- fullvox %>% left_join(as.data.frame(point_above_all_vox[,c(3,5)]), by = "id_xyz", )
# NAs returned for 0 points so it is appropriate to replace them with 0
fullvox$npoints_above[is.na(fullvox$npoints_above)] <- 0
### FR_Di is the frequency ratio of the number of returns above a voxel in relation to total returns (Kim et al. 2016)
fullvox <- fullvox %>% mutate(FR_Di = npoints_above/sum(fullvox$SVi))
### I_Di is the median intensity of returns above each voxel
# for loop to calculate median intensity above each voxel
i_above = list()
for(i in 1:length(unique(fullvox$Z))){
i_a <- fullvox %>% filter(Z > Z[i])
i_a$I_list<- lapply( i_a$I_list, "length<-", max(lengths( i_a$I_list)))
i_abv <- as.data.frame(do.call(rbind, i_a$I_list))
i_a_merge <- cbind(as.data.frame(i_a), i_abv)
i_a_merge <- cbind(X = i_a_merge$X, Y = i_a_merge$Y, i_a_merge[,ncol(i_a)+1:(ncol(i_a_merge)-ncol(i_a))])
i_Di_mt <- i_a_merge %>% pivot_longer(cols = 3:ncol(i_a_merge)) %>%
group_by(X,Y) %>%
summarize(Z = unique(fullvox$Z)[i], i_Di = median(value, na.rm = T))
i_above[[i]] <- i_Di_mt
}
# extract point below data and merge using the voxel id
i_above_all_vox <- do.call(rbind,i_above)
i_above_all_vox <- i_above_all_vox %>% mutate(id_xyz = paste0(X,"-",Y,"-",Z))
fullvox <- fullvox %>% left_join(as.data.frame(i_above_all_vox[,c(4,5)]), by = "id_xyz" )
return(fullvox)
}
resolution = 1
rm(resolution)
std_voxel_all <- function(las, resolution){
#
vox <- lidR::voxel_metrics(las, func = vox_mt(Z, as.numeric(Intensity)), res = resolution)
# create all possible voxels
x = seq(min(vox$X), max(vox$X), resolution)
y = seq(min(vox$Y), max(vox$Y), resolution)
z = seq(min(vox$Z), max(vox$Z), resolution)
all_vox = expand.grid(X = x, Y = y, Z = z)
data.table::setDT(all_vox)
# merge all and voxel_metrics() output
fullvox = vox[all_vox, on = c("X", "Y", "Z")]
# give each voxel a unique id and assign 0s and NAs where appropriate
fullvox <- fullvox %>% mutate(id_xyz = paste0(X,"-",Y,"-",Z))
fullvox$SVi[is.na(fullvox$SVi)] <- 0
null_list <- lapply(fullvox$Z_list,is.null)
fullvox$Z_list[do.call(rbind,null_list)] <- NA
fullvox$I_list[do.call(rbind,null_list)] <- NA
##### Individual voxel metrics
### FR_SVi is the frequency ratio of the number of returns in a voxel in relation to total returns (in Pearse et al. 2019 this is FR_Di)
fullvox <- fullvox %>% mutate(FR_SVi = SVi/sum(fullvox$SVi))
### P_Di is the number of returns below each voxel (Pearse et al. 2019; Kim et al. 2016 uses returns above)
# create a vector for Z in each iteration
Zi = fullvox$Z
# for loop to calculate points below each voxel
point_blow = list()
for(i in 1:length(unique(fullvox$Z))){
np_b <- fullvox %>%
group_by(X,Y) %>%
filter(Z < unique(Z)[i]) %>%
summarize(npoints_below = sum(SVi), Z= unique(Zi)[i])
point_blow[[i]] <- np_b
}
# extract point below data and merge using the voxel id
point_blow_all_vox <- do.call(rbind,point_blow)
point_blow_all_vox <- point_blow_all_vox %>% mutate(id_xyz = paste0(X,"-",Y,"-",Z))
fullvox <- fullvox %>% left_join(as.data.frame(point_blow_all_vox[,c(3,5)]), by = "id_xyz", )
### P_Di_above is the number of returns above each voxel (Kim et al. 2016 uses returns above as P_Di)
# for loop to calculate points below each voxel
point_above = list()
for(i in 1:length(unique(fullvox$Z))){
np_a <- fullvox %>%
group_by(X,Y) %>%
filter(Z > unique(Z)[i]) %>%
summarize(npoints_above = sum(SVi, na.rm = T), Z= unique(Zi)[i])
point_above[[i]] <- np_a
}
# extract point below data and merge using the voxel id
point_above_all_vox <- do.call(rbind,point_above)
point_above_all_vox <- point_above_all_vox %>% mutate(id_xyz = paste0(X,"-",Y,"-",Z))
fullvox <- fullvox %>% left_join(as.data.frame(point_above_all_vox[,c(3,5)]), by = "id_xyz", )
# NAs returned for 0 points so it is appropriate to replace them with 0
fullvox$npoints_above[is.na(fullvox$npoints_above)] <- 0
### FR_Di is the frequency ratio of the number of returns above a voxel in relation to total returns (Kim et al. 2016)
fullvox <- fullvox %>% mutate(FR_Di = npoints_above/sum(fullvox$SVi))
### I_Di is the median intensity of returns above each voxel
# for loop to calculate median intensity above each voxel
i_above = list()
for(i in 1:length(unique(fullvox$Z))){
i_a <- fullvox %>% filter(Z > Z[i])
i_a$I_list<- lapply( i_a$I_list, "length<-", max(lengths( i_a$I_list)))
i_abv <- as.data.frame(do.call(rbind, i_a$I_list))
i_a_merge <- cbind(as.data.frame(i_a), i_abv)
i_a_merge <- cbind(X = i_a_merge$X, Y = i_a_merge$Y, i_a_merge[,ncol(i_a)+1:(ncol(i_a_merge)-ncol(i_a))])
i_Di_mt <- i_a_merge %>% pivot_longer(cols = 3:ncol(i_a_merge)) %>%
group_by(X,Y) %>%
summarize(Z = unique(fullvox$Z)[i], i_Di = median(value, na.rm = T))
i_above[[i]] <- i_Di_mt
}
# extract point below data and merge using the voxel id
i_above_all_vox <- do.call(rbind,i_above)
i_above_all_vox <- i_above_all_vox %>% mutate(id_xyz = paste0(X,"-",Y,"-",Z))
fullvox <- fullvox %>% left_join(as.data.frame(i_above_all_vox[,c(4,5)]), by = "id_xyz" )
return(fullvox)
}
std_voxel_all(low, i)
i =  1
low.vox <- std_voxel_all(low, i)
med.vox <- std_voxel_all(med, i)
high.vox <- std_voxel_all(high, i)
rbind(low.vox,med.vox,high.vox)
low.vox$den <- "low"
med.vox$den <- "med"
high.vox$den <- "high"
rbind(low.vox,med.vox,high.vox)
vox.list = list()
vox.list = list()
rm(i)
for(i in 1:5){
low.vox <- std_voxel_all(low, i)
low.vox$den <- "low"
med.vox <- std_voxel_all(med, i)
med.vox$den <- "med"
high.vox <- std_voxel_all(high, i)
high.vox$den <- "high"
vox.list[[i]] <- rbind(low.vox, med.vox, high.vox)
}
vox.list = list()
for(i in 1:5){
low.vox <- std_voxel_all(low, i)
low.vox$den <- "low"
med.vox <- std_voxel_all(med, i)
med.vox$den <- "med"
high.vox <- std_voxel_all(high, i)
high.vox$den <- "high"
all.den <- rbind(low.vox, med.vox, high.vox)
vox.list[[i]] <- cbind(vox_size = i, all.den)
}
all_vox_df <- do.call(rbind, vox.list)
View(all_vox_df)
ggplot(all_vox_df) + geom_histogram(aes(SVi))
View(all_vox_df)
ggplot(all_vox_df[all_vox_df$vox_size ==1]) + geom_histogram(SVi)
ggplot(all_vox_df[all_vox_df$vox_size ==1,]) + geom_histogram(SVi)
ggplot(all_vox_df[all_vox_df$vox_size ==1,]) + geom_histogram(SVI)
ggplot(all_vox_df[all_vox_df$vox_size ==1,]) + geom_histogram(aes(SVi))
ggplot(all_vox_df[all_vox_df$vox_size ==2,]) + geom_histogram(aes(SVi))
ggplot(all_vox_df[all_vox_df$vox_size ==3,]) + geom_histogram(aes(SVi))
ggplot(all_vox_df[all_vox_df$vox_size ==4,]) + geom_histogram(aes(SVi))
ggplot(all_vox_df[all_vox_df$vox_size ==5,]) + geom_histogram(aes(SVi))
pal = wesanderson::wes_palette("Zissou1")
View(all_vox)
View(all_vox_df)
i = 1
hist <- ggplot(all_vox_df[all_vox_df$vox_size == i, -1:4]) + geom_histogram(aes(all_vox_df[,i]), fill = pal[1]) +
xlab(colnames(resp.fin)[i]) +
theme_bw()
all_vox_df[all_vox_df$vox_size == i, -1:4]
hist <- ggplot(all_vox_df[all_vox_df$vox_size == i, -c(1:4)]) + geom_histogram(aes(all_vox_df[,i]), fill = pal[1]) +
xlab(colnames(resp.fin)[i]) +
theme_bw()
hist <- ggplot(all_vox_df[all_vox_df$vox_size == i, -c(1:4)]) + geom_histogram(aes(all_vox_df[,i]), fill = pal[1]) +
xlab(colnames(all_vox_df[,i]) +
theme_bw()
print(hist)
}
}
ggplot(all_vox_df[all_vox_df$vox_size ==,]) + geom_histogram(aes(SVi))
ggplot(fullvox[fullvox$SVi > 0,], aes(x = as.factor(Z),y =  i_Di)) + geom_violin(trim = F, aes(fill = as.factor(Z))) + geom_boxplot(width=0.1)
ggplot(fullvox[fullvox$SVi > 0,], aes(x = as.factor(Z),y =  i_Di)) + geom_violin(trim = F, aes(fill = as.factor(Z))) + geom_boxplot(width=0.1)
ggplot(fullvox[fullvox$SVi > 0,], aes(x = SVi, y =  FR_Di)) + geom_violin(trim = T, aes(fill = as.factor(Z)))
ggplot(fullvox[fullvox$SVi > 0,], aes(x = as.factor(Z),y =  FR_Di)) + geom_violin(trim = F, aes(fill = as.factor(Z))) + geom_boxplot(width=0.1)
hist <- ggplot(all_vox_df[all_vox_df$vox_size == i, -c(1:4)]) + geom_histogram(aes(all_vox_df[,i]), fill = pal[1]) +
xlab(colnames(all_vox_df[,i]) +
theme_bw()
print(hist)
}
}
ggplot(all_vox_df[all_vox_df$vox_size ==,]) + geom_histogram(aes(SVi))
ggplot(fullvox[fullvox$SVi > 0,], aes(x = as.factor(Z),y =  i_Di)) + geom_violin(trim = F, aes(fill = as.factor(Z))) + geom_boxplot(width=0.1)
ggplot(fullvox[fullvox$SVi > 0,], aes(x = as.factor(Z),y =  i_Di)) + geom_violin(trim = F, aes(fill = as.factor(Z))) + geom_boxplot(width=0.1)
ggplot(fullvox[fullvox$SVi > 0,], aes(x = SVi, y =  FR_Di)) + geom_violin(trim = T, aes(fill = as.factor(Z)))
ggplot(fullvox[fullvox$SVi > 0,], aes(x = as.factor(Z),y =  FR_Di)) + geom_violin(trim = F, aes(fill = as.factor(Z))) + geom_boxplot(width=0.1)
hist <- ggplot(all_vox_df[all_vox_df$vox_size == i, -c(1:4)]) + geom_histogram(aes(all_vox_df[,i]), fill = pal[1]) +
xlab(colnames(all_vox_df[,i])) +
theme_bw()
print(hist)
hist
ggplot(all_vox_df[all_vox_df$vox_size == i, -c(1:4)]) + geom_histogram(aes(all_vox_df[,i]))
df <- all_vox_df[all_vox_df$vox_size == i, -c(1:4)]
View(df)
df <- all_vox_df[all_vox_df$vox_size == i, -c(1:4)]
hist <- ggplot(df) + geom_histogram(aes(df[,i]), fill = pal[1]) +
xlab(colnames(all_vox_df[,i])) +
theme_bw()
print(hist)
hist <- ggplot(df) + geom_histogram(aes(df[,i]), fill = pal[1]) +
xlab(colnames(df[,i])) +
theme_bw()
print(hist)
colnames(df[,i])
str(all_vox_df)
str(df)
colnames(df
)
colnames(df)[i]
hist <- ggplot(df) + geom_histogram(aes(df[,i]), fill = pal[1]) +
xlab(colnames(df)[i]) +
theme_bw()
print(hist)
hist <- ggplot(df) + geom_histogram(aes(df[,i]), fill = pal[1]) +
xlab(paste0("res",i,"-", colnames(df)[i])) +
theme_bw()
print(hist)
hist <- ggplot(df) + geom_histogram(aes(df[,i]), fill = pal[1]) +
facet_grid(~den)
df <- all_vox_df[all_vox_df$vox_size == j, -c(1:4)]
hist <- ggplot(df) + geom_histogram(aes(df[,i]), fill = pal[1]) +
facet_grid(~den)
xlab(paste0("res",i,"-", colnames(df)[i])) +
theme_bw()
hist <- ggplot(df) + geom_histogram(aes(df[,i]), fill = pal[1]) +
facet_grid(~den) +
xlab(paste0("res",i,"-", colnames(df)[i])) +
theme_bw()
print(hist)
pdf("voxel_histograms_0.pdf")
for(i in 1:ncol(all_vox_df)){
for(j in 1:5){
df <- all_vox_df[all_vox_df$vox_size == j, -c(1:4)]
hist <- ggplot(df) + geom_histogram(aes(df[,i]), fill = pal[1]) +
facet_grid(~den) +
xlab(paste0("res",i,"-", colnames(df)[i])) +
theme_bw()
print(hist)
}
}
dev.off
dev.off
dev.off()
dev.off()
pdf("voxel_histograms_0.pdf")
for(i in 1:ncol(all_vox_df)){
for(j in 1:5){
df <- all_vox_df[all_vox_df$vox_size == j, -c(1:4)]
hist <- ggplot(df) + geom_histogram(aes(df[,i]), fill = pal[1]) +
facet_grid(~den) +
xlab(paste0("res",j,"-", colnames(df)[i])) +
theme_bw()
print(hist)
}
}
dev.off()
View(df)
View(df)
df <- all_vox_df[all_vox_df$vox_size == j, -c(1:4,18:20,26)]
pdf("voxel_histograms_0.pdf")
for(i in 1:ncol(all_vox_df)){
for(j in 1:5){
df <- all_vox_df[all_vox_df$vox_size == j, -c(1:4,18:20,26)]
hist <- ggplot(df) + geom_histogram(aes(df[,i]), fill = pal[1]) +
facet_grid(~den) +
xlab(paste0("res",j,"-", colnames(df)[i])) +
theme_bw()
print(hist)
}
}
dev.off()
df <- all_vox_df[all_vox_df$vox_size == j, -c(1:4,18:20,26)]
View(df)
df <- all_vox_df[all_vox_df$vox_size == j, -c(1:4)]
View(df)
all_vox_df[all_vox_df$vox_size == j, -c(1:4,18:20,26)]
all_vox_df[all_vox_df$vox_size == j, -c(1,2,3,4,18,19,20,26)]
View(all_vox_df)
df <- all_vox_df[all_vox_df$vox_size == j, -c(1:4,22:24,30)]
df
pdf("voxel_histograms_0.pdf")
for(i in 1:ncol(all_vox_df)){
for(j in 1:5){
df <- all_vox_df[all_vox_df$vox_size == j, -c(1:4,22:24,30)]
hist <- ggplot(df) + geom_histogram(aes(df[,i]), fill = pal[1]) +
facet_grid(~den) +
xlab(paste0("res",j,"-", colnames(df)[i])) +
theme_bw()
print(hist)
}
}
pdf("voxel_histograms_0.pdf")
for(i in 1:ncol(all_vox_df)){
for(j in 1:5){
df <- all_vox_df[all_vox_df$vox_size == j, -c(1:4,22:24)]
hist <- ggplot(df) + geom_histogram(aes(df[,i]), fill = pal[1]) +
facet_grid(~den) +
xlab(paste0("res",j,"-", colnames(df)[i])) +
theme_bw()
print(hist)
}
}
dev.off()
dev.off()
pdf("voxel_histograms_0.pdf")
for(i in 1:ncol(all_vox_df)){
for(j in 1:5){
df <- all_vox_df[all_vox_df$vox_size == j, -c(1:4,22:24)]
hist <- ggplot(df) + geom_histogram(aes(df[,i]), fill = pal[1]) +
facet_grid(~den) +
xlab(paste0("res",j,"-", colnames(df)[i])) +
theme_bw()
print(hist)
}
}
dev.off()
pdf("voxel_histograms_no0.pdf")
for(i in 1:ncol(all_vox_df)){
for(j in 1:5){
df <- all_vox_df[all_vox_df$vox_size == j & all_vox_df$Z > 0, -c(1:4,22:24)]
hist <- ggplot(df) + geom_histogram(aes(df[,i]), fill = pal[1]) +
facet_grid(~den) +
xlab(paste0("res",j,"-", colnames(df)[i])) +
theme_bw()
print(hist)
}
}
dev.off()
pdf("voxel_histograms_no0.pdf")
for(i in 1:ncol(all_vox_df)){
for(j in 1:5){
df <- all_vox_df[all_vox_df$vox_size == j & all_vox_df$SVi > 0, -c(1:4,22:24)]
hist <- ggplot(df) + geom_histogram(aes(df[,i]), fill = pal[1]) +
facet_grid(~den) +
xlab(paste0("res",j,"-", colnames(df)[i])) +
theme_bw()
print(hist)
}
}
dev.off()
low@data$Intensity
df <- all_vox_df[all_vox_df$vox_size == j & all_vox_df$SVi > 0, -c(1:4,22:24)]
df <- all_vox_df[all_vox_df$vox_size == j & all_vox_df$SVi > 0, -c(1:4,22:24)]
plot <- ggplot(df) + geom_violin(aes(x = all_vox_df$Z, y = df[,i]), fill = as.factor(Z)) +
facet_grid(~den) +
xlab(paste0("res",j,"-", colnames(df)[i])) +
theme_bw()
df <- all_vox_df[all_vox_df$vox_size == j & all_vox_df$SVi > 0, -c(1:4,22:24)]
plot <- ggplot(df) + geom_violin(aes(x = all_vox_df$Z[i], y = df[,i]), fill = pal[1]) +
facet_grid(~den) +
xlab(paste0("res",j,"-", colnames(df)[i])) +
theme_bw()
print(hist)
print(plot)
plot <- ggplot(df) + geom_violin(aes(x = as.factor(all_vox_df$Z[i]), y = df[,i]), fill = pal[1]) +
facet_grid(~den) +
xlab(paste0("res",j,"-", colnames(df)[i])) +
theme_bw()
print(plot)
df <- all_vox_df[all_vox_df$vox_size == j & all_vox_df$SVi > 0, -c(1:3,22:24)]
plot <- ggplot(df) + geom_violin(aes(x = as.factor(Z), y = df[,i]), fill = pal[1]) +
facet_grid(~den) +
xlab(paste0("res",j,"-", colnames(df)[i])) +
theme_bw()
print(plot)
plot <- ggplot(df) + geom_violin(aes(x = as.factor(Z), y = df[,i]), fill = pal[1]) + coord_flip()
plot <- ggplot(df) + geom_violin(aes(x = as.factor(Z), y = df[,i]), fill = pal[1]) + coord_flip()+
facet_grid(~den) +
xlab(paste0("res",j,"-", colnames(df)[i])) +
theme_bw()
print(plot)
plot <- ggplot(df) + geom_violin(aes(x = as.factor(Z), y = df[,i]), fill = pal[1]) + coord_flip()+
facet_grid(~den) +
ylab(paste0("res",j,"-", colnames(df)[i])) + xlab("Voxel height (m)")
print(plot)
## seperated by Z
pdf("voxel_violin_0.pdf")
for(i in 1:ncol(all_vox_df)){
for(j in 1:5){
df <- all_vox_df[all_vox_df$vox_size == j, -c(1:3,22:24)]
plot <- ggplot(df) + geom_violin(aes(x = as.factor(Z), y = df[,i]), fill = pal[1]) + coord_flip()+
facet_grid(~den) +
ylab(paste0("res",j,"-", colnames(df)[i])) + xlab("Voxel height (m)") +
theme_bw()
print(plot)
}
}
dev.off()
ggplot(fullvox[fullvox$SVi > 0,], aes(x = as.factor(Z),y =  i_Di)) + geom_violin(trim = F, aes(fill = as.factor(Z))) + geom_boxplot(width=0.1)
ggplot(fullvox[fullvox$SVi > 0,], aes(x = as.factor(Z),y =  i_Di)) + geom_violin(trim = F, aes(fill = as.factor(Z))) + geom_boxplot(width=0.1)
ggplot(fullvox[fullvox$SVi > 0,], aes(x = SVi, y =  FR_Di)) + geom_violin(trim = T, aes(fill = as.factor(Z)))
ggplot(fullvox[fullvox$SVi > 0,], aes(x = as.factor(Z),y =  FR_Di)) + geom_violin(trim = F, aes(fill = as.factor(Z))) + geom_boxplot(width=0.1)
dev.off()
View(fullvox)
writeLAS(med, "med_density.las")
writeLAS(low, "med_density.las")
writeLAS(high, "high_density.las")
writeLAS(low, "low_density.las")
writeLAS(med, "med_density.las")
library(tidyverse)
library(lidR)
library(lidRmts)
readLAS("/viz/low_density.las")
readLAS("viz/low_density.las")
low <- readLAS("viz/low_density.las")
low <- readLAS("viz/low_density.las")
med <- readLAS("viz/med_density.las")
high <- readLAS("viz/high_density.las")
library(roxygen2)
library(devtools)
document()
devtools::install_github("https://github.com/RCBlackburn/lidRmts", auth_token = " e9c9e7db5d5ff127b9f26359da5473b83897367f")
# library(doParallel)
# library(foreach)
library(lidRmts)
high <- readLAS("viz/high_density.las")
lidRmts::std_voxel_all(high)
lidRmts::std_voxel_all(high, 1)
cbind.fill()
low <- readLAS("viz/low_density.las")
med <- readLAS("viz/med_density.las")
high <- readLAS("viz/high_density.las")
library(tidyverse)
library(lidR)
library(lidRmts)
low <- readLAS("viz/low_density.las")
med <- readLAS("viz/med_density.las")
high <- readLAS("viz/high_density.las")
plot(med)
plot(med)
plot(med, size = 3)
library(devtools)
dir()
document
document()
document()
low <- readLAS("viz/low_density.las")
library(tidyverse)
library(lidR)
library(lidRmts)
low <- readLAS("viz/low_density.las")
std_voxel_all <- function(las, resolution, vox_ht){
vox <- lidR::voxel_metrics(las, func = vox_mt(Z, as.numeric(Intensity)), res = resolution)
# create all possible voxels
x = seq(min(vox$X), max(vox$X), resolution)
y = seq(min(vox$Y), max(vox$Y), resolution)
z = seq(min(vox$Z), vox_ht, resolution)
all_vox = expand.grid(X = x, Y = y, Z = z)
data.table::setDT(all_vox)
# merge all and voxel_metrics() output
fullvox = vox[all_vox, on = c("X", "Y", "Z")]
# give each voxel a unique id and assign 0s and NAs where appropriate
fullvox <- fullvox %>% mutate(id_xyz = paste0(X,"-",Y,"-",Z))
fullvox$SVi[is.na(fullvox$SVi)] <- 0
null_list <- lapply(fullvox$Z_list,is.null)
fullvox$Z_list[do.call(rbind,null_list)] <- NA
fullvox$I_list[do.call(rbind,null_list)] <- NA
##### Individual voxel metrics
### FR_SVi is the frequency ratio of the number of returns in a voxel in relation to total returns (in Pearse et al. 2019 this is FR_Di)
fullvox <- fullvox %>% mutate(FR_SVi = SVi/sum(fullvox$SVi))
### P_Di is the number of returns below each voxel (Pearse et al. 2019; Kim et al. 2016 uses returns above)
# create a vector for Z in each iteration
Zi = fullvox$Z
# for loop to calculate points below each voxel
point_blow = list()
for(i in 1:length(unique(fullvox$Z))){
np_b <- fullvox %>%
group_by(X,Y) %>%
filter(Z < unique(Z)[i]) %>%
summarize(npoints_below = sum(SVi), Z= unique(Zi)[i])
point_blow[[i]] <- np_b
}
# extract point below data and merge using the voxel id
point_blow_all_vox <- do.call(rbind,point_blow)
point_blow_all_vox <- point_blow_all_vox %>% mutate(id_xyz = paste0(X,"-",Y,"-",Z))
fullvox <- fullvox %>% left_join(as.data.frame(point_blow_all_vox[,c(3,5)]), by = "id_xyz", )
### P_Di_above is the number of returns above each voxel (Kim et al. 2016 uses returns above as P_Di)
# for loop to calculate points below each voxel
point_above = list()
for(i in 1:length(unique(fullvox$Z))){
np_a <- fullvox %>%
group_by(X,Y) %>%
filter(Z > unique(Z)[i]) %>%
summarize(npoints_above = sum(SVi, na.rm = T), Z= unique(Zi)[i])
point_above[[i]] <- np_a
}
# extract point below data and merge using the voxel id
point_above_all_vox <- do.call(rbind,point_above)
point_above_all_vox <- point_above_all_vox %>% mutate(id_xyz = paste0(X,"-",Y,"-",Z))
fullvox <- fullvox %>% left_join(as.data.frame(point_above_all_vox[,c(3,5)]), by = "id_xyz", )
# NAs returned for 0 points so it is appropriate to replace them with 0
fullvox$npoints_above[is.na(fullvox$npoints_above)] <- 0
### FR_Di is the frequency ratio of the number of returns above a voxel in relation to total returns (Kim et al. 2016)
fullvox <- fullvox %>% mutate(FR_Di = npoints_above/sum(fullvox$SVi))
### I_Di is the median intensity of returns above each voxel
# for loop to calculate median intensity above each voxel
i_above = list()
for(i in 1:length(unique(fullvox$Z))){
i_a <- fullvox %>% filter(Z > Z[i])
i_a$I_list<- lapply( i_a$I_list, "length<-", max(lengths( i_a$I_list)))
i_abv <- as.data.frame(do.call(rbind, i_a$I_list))
i_a_merge <- cbind(as.data.frame(i_a), i_abv)
i_a_merge <- cbind(X = i_a_merge$X, Y = i_a_merge$Y, i_a_merge[,ncol(i_a)+1:(ncol(i_a_merge)-ncol(i_a))])
i_Di_mt <- i_a_merge %>% pivot_longer(cols = 3:ncol(i_a_merge)) %>%
group_by(X,Y) %>%
summarize(Z = unique(fullvox$Z)[i], i_Di = median(value, na.rm = T))
i_above[[i]] <- i_Di_mt
}
# extract point below data and merge using the voxel id
i_above_all_vox <- do.call(rbind,i_above)
i_above_all_vox <- i_above_all_vox %>% mutate(id_xyz = paste0(X,"-",Y,"-",Z))
fullvox <- fullvox %>% left_join(as.data.frame(i_above_all_vox[,c(4,5)]), by = "id_xyz" )
return(fullvox)
}
std_voxel_all(low, 5, 30)
t <- std_voxel_all(low, 5, 30)
View(t)
