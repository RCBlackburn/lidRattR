i_sd_sd = sd(sd_i_vox, na.rm = T),
i_sd_cv = sd(sd_i_vox, na.rm = T)/mean(sd_i_vox, na.rm = T),
i_sd_IQR = IQR(sd_i_vox, na.rm = T),
i_sd_skew = e1071::skewness(sd_i_vox, na.rm = T),
i_sd_kurt = e1071::kurtosis(sd_i_vox, na.rm = T),
i_cv_med = median(cv_i_vox, na.rm = T),
i_cv_mean = mean(cv_i_vox, na.rm = T),
i_cv_var = var(cv_i_vox, na.rm = T),
i_cv_sd = sd(cv_i_vox, na.rm = T),
i_cv_cv = sd(cv_i_vox, na.rm = T)/mean(cv_i_vox, na.rm = T),
i_cv_IQR = IQR(cv_i_vox, na.rm = T),
i_cv_skew = e1071::skewness(cv_i_vox, na.rm = T),
i_cv_kurt = e1071::kurtosis(cv_i_vox, na.rm = T),
i_IQR_med = median(IQR_i_vox, na.rm = T),
i_IQR_mean = mean(IQR_i_vox, na.rm = T),
i_IQR_var = var(IQR_i_vox, na.rm = T),
i_IQR_sd = sd(IQR_i_vox, na.rm = T),
i_IQR_cv = sd(IQR_i_vox, na.rm = T)/mean(IQR_i_vox, na.rm = T),
i_IQR_IQR = IQR(IQR_i_vox, na.rm = T),
i_IQR_skew = e1071::skewness(IQR_i_vox, na.rm = T),
i_IQR_kurt = e1071::kurtosis(IQR_i_vox, na.rm = T),
i_skew_med = median(skew_i_vox, na.rm = T),
i_skew_mean = mean(skew_i_vox, na.rm = T),
i_skew_var = var(skew_i_vox, na.rm = T),
i_skew_sd = sd(skew_i_vox, na.rm = T),
i_skew_cv = sd(skew_i_vox, na.rm = T)/mean(skew_i_vox, na.rm = T),
i_skew_IQR = IQR(skew_i_vox, na.rm = T),
i_skew_skew = e1071::skewness(skew_i_vox, na.rm = T),
i_skew_kurt = e1071::kurtosis(skew_i_vox, na.rm = T),
i_kurt_med = median(kurt_i_vox, na.rm = T),
i_kurt_mean = mean(kurt_i_vox, na.rm = T),
i_kurt_var = var(kurt_i_vox, na.rm = T),
i_kurt_sd = sd(kurt_i_vox, na.rm = T),
i_kurt_cv = sd(kurt_i_vox, na.rm = T)/mean(kurt_i_vox, na.rm = T),
i_kurt_IQR = IQR(kurt_i_vox, na.rm = T),
i_kurt_skew = e1071::skewness(kurt_i_vox, na.rm = T),
i_kurt_kurt = e1071::kurtosis(kurt_i_vox, na.rm = T),
P_Di_mean = mean(npoints_below, na.rm = T),
P_Di_var = var(npoints_below, na.rm = T),
P_Di_sd = sd(npoints_below, na.rm = T),
P_Di_cv = sd(npoints_below, na.rm = T)/mean(npoints_below, na.rm = T),
P_Di_IQR = IQR(npoints_below, na.rm = T),
P_Di_skew = e1071::skewness(npoints_below, na.rm = T),
P_Di_kurt = e1071::kurtosis(npoints_below, na.rm = T),
npoints_above_med = median(npoints_above, na.rm = T),
npoints_above_mean = mean(npoints_above, na.rm = T),
npoints_above_var = var(npoints_above, na.rm = T),
npoints_above_sd = sd(npoints_above, na.rm = T),
npoints_above_cv = sd(npoints_above, na.rm = T)/mean(npoints_above, na.rm = T),
npoints_above_IQR = IQR(npoints_above, na.rm = T),
npoints_above_skew = e1071::skewness(npoints_above, na.rm = T),
npoints_above_kurt = e1071::kurtosis(npoints_above, na.rm = T),
FR_Di_med = median(FR_Di, na.rm = T),
FR_Di_mean = mean(FR_Di, na.rm = T),
FR_Di_var = var(FR_Di, na.rm = T),
FR_Di_sd = sd(FR_Di, na.rm = T),
FR_Di_cv = sd(FR_Di, na.rm = T)/mean(FR_Di, na.rm = T),
FR_Di_IQR = IQR(FR_Di, na.rm = T),
FR_Di_skew = e1071::skewness(FR_Di, na.rm = T),
FR_Di_kurt = e1071::kurtosis(FR_Di, na.rm = T),
i_Di_med = median(i_Di, na.rm = T),
i_Di_mean = mean(i_Di, na.rm = T),
i_Di_var = var(i_Di, na.rm = T),
i_Di_sd = sd(i_Di, na.rm = T),
i_Di_cv = sd(i_Di, na.rm = T)/mean(i_Di, na.rm = T),
i_Di_IQR = IQR(i_Di, na.rm = T),
i_Di_skew = e1071::skewness(i_Di, na.rm = T),
i_Di_kurt = e1071::kurtosis(i_Di, na.rm = T))
colnames(Z_vox) <- paste0("HB", unique(fullvox$Z)[i], colnames(Z_vox))
Z_vox_list[[i]] <- Z_vox
}
HB_metrics <- do.call(cbind, Z_vox_list)
View(HB_metrics)
fullvox %>% group_by(Z)
Z_vox <- fullvox %>% group_by(Z) %>%
summarize(z_med_med = median(med_z_vox, na.rm = T),
z_med_mean = mean(med_z_vox, na.rm = T),
z_med_var = var(med_z_vox, na.rm = T),
z_med_sd = sd(med_z_vox, na.rm = T),
z_med_cv = sd(med_z_vox, na.rm = T)/mean(med_z_vox, na.rm = T),
z_med_IQR = IQR(med_z_vox, na.rm = T),
z_med_skew = e1071::skewness(med_z_vox, na.rm = T),
z_med_kurt = e1071::kurtosis(med_z_vox, na.rm = T),
z_mean_med = median(mean_z_vox, na.rm = T),
z_mean_mean = mean(mean_z_vox, na.rm = T),
z_mean_var = var(mean_z_vox, na.rm = T),
z_mean_sd = sd(mean_z_vox, na.rm = T),
z_mean_cv = sd(mean_z_vox, na.rm = T)/mean(mean_z_vox, na.rm = T),
z_mean_IQR = IQR(mean_z_vox, na.rm = T),
z_mean_skew = e1071::skewness(mean_z_vox, na.rm = T),
z_mean_kurt = e1071::kurtosis(mean_z_vox, na.rm = T),
z_var_med = median(var_z_vox, na.rm = T),
z_var_mean = mean(var_z_vox, na.rm = T),
z_var_var = var(var_z_vox, na.rm = T),
z_var_sd = sd(var_z_vox, na.rm = T),
z_var_cv = sd(var_z_vox, na.rm = T)/mean(var_z_vox, na.rm = T),
z_var_IQR = IQR(var_z_vox, na.rm = T),
z_var_skew = e1071::skewness(var_z_vox, na.rm = T),
z_var_kurt = e1071::kurtosis(var_z_vox, na.rm = T),
z_sd_med = median(sd_z_vox, na.rm = T),
z_sd_mean = mean(sd_z_vox, na.rm = T),
z_sd_var = var(sd_z_vox, na.rm = T),
z_sd_sd = sd(sd_z_vox, na.rm = T),
z_sd_cv = sd(sd_z_vox, na.rm = T)/mean(sd_z_vox, na.rm = T),
z_sd_IQR = IQR(sd_z_vox, na.rm = T),
z_sd_skew = e1071::skewness(sd_z_vox, na.rm = T),
z_sd_kurt = e1071::kurtosis(sd_z_vox, na.rm = T),
z_cv_med = median(cv_z_vox, na.rm = T),
z_cv_mean = mean(cv_z_vox, na.rm = T),
z_cv_var = var(cv_z_vox, na.rm = T),
z_cv_sd = sd(cv_z_vox, na.rm = T),
z_cv_cv = sd(cv_z_vox, na.rm = T)/mean(cv_z_vox, na.rm = T),
z_cv_IQR = IQR(cv_z_vox, na.rm = T),
z_cv_skew = e1071::skewness(cv_z_vox, na.rm = T),
z_cv_kurt = e1071::kurtosis(cv_z_vox, na.rm = T),
z_IQR_med = median(IQR_z_vox, na.rm = T),
z_IQR_mean = mean(IQR_z_vox, na.rm = T),
z_IQR_var = var(IQR_z_vox, na.rm = T),
z_IQR_sd = sd(IQR_z_vox, na.rm = T),
z_IQR_cv = sd(IQR_z_vox, na.rm = T)/mean(IQR_z_vox, na.rm = T),
z_IQR_IQR = IQR(IQR_z_vox, na.rm = T),
z_IQR_skew = e1071::skewness(IQR_z_vox, na.rm = T),
z_IQR_kurt = e1071::kurtosis(IQR_z_vox, na.rm = T),
z_skew_med = median(skew_z_vox, na.rm = T),
z_skew_mean = mean(skew_z_vox, na.rm = T),
z_skew_var = var(skew_z_vox, na.rm = T),
z_skew_sd = sd(skew_z_vox, na.rm = T),
z_skew_cv = sd(skew_z_vox, na.rm = T)/mean(skew_z_vox, na.rm = T),
z_skew_IQR = IQR(skew_z_vox, na.rm = T),
z_skew_skew = e1071::skewness(skew_z_vox, na.rm = T),
z_skew_kurt = e1071::kurtosis(skew_z_vox, na.rm = T),
z_kurt_med = median(kurt_z_vox, na.rm = T),
z_kurt_mean = mean(kurt_z_vox, na.rm = T),
z_kurt_var = var(kurt_z_vox, na.rm = T),
z_kurt_sd = sd(kurt_z_vox, na.rm = T),
z_kurt_cv = sd(kurt_z_vox, na.rm = T)/mean(kurt_z_vox, na.rm = T),
z_kurt_IQR = IQR(kurt_z_vox, na.rm = T),
z_kurt_skew = e1071::skewness(kurt_z_vox, na.rm = T),
z_kurt_kurt = e1071::kurtosis(kurt_z_vox, na.rm = T),
i_vox_med = median(med_i_vox, na.rm = T),
i_med_mean = mean(med_i_vox, na.rm = T),
i_med_var = var(med_i_vox, na.rm = T),
i_med_sd = sd(med_i_vox, na.rm = T),
i_med_cv = sd(med_i_vox, na.rm = T)/mean(med_i_vox, na.rm = T),
i_med_IQR = IQR(med_i_vox, na.rm = T),
i_med_skew = e1071::skewness(med_i_vox, na.rm = T),
i_med_kurt = e1071::kurtosis(med_i_vox, na.rm = T),
i_mean_med = median(mean_i_vox, na.rm = T),
i_mean_mean = mean(mean_i_vox, na.rm = T),
i_mean_var = var(mean_i_vox, na.rm = T),
i_mean_sd = sd(mean_i_vox, na.rm = T),
i_mean_cv = sd(mean_i_vox, na.rm = T)/mean(mean_i_vox, na.rm = T),
i_mean_IQR = IQR(mean_i_vox, na.rm = T),
i_mean_skew = e1071::skewness(mean_i_vox, na.rm = T),
i_mean_kurt = e1071::kurtosis(mean_i_vox, na.rm = T),
i_var_med = median(var_i_vox, na.rm = T),
i_var_mean = mean(var_i_vox, na.rm = T),
i_var_var = var(var_i_vox, na.rm = T),
i_var_sd = sd(var_i_vox, na.rm = T),
i_var_cv = sd(var_i_vox, na.rm = T)/mean(var_i_vox, na.rm = T),
i_var_IQR = IQR(var_i_vox, na.rm = T),
i_var_skew = e1071::skewness(var_i_vox, na.rm = T),
i_var_kurt = e1071::kurtosis(var_i_vox, na.rm = T),
i_sd_med = median(sd_i_vox, na.rm = T),
i_sd_mean = mean(sd_i_vox, na.rm = T),
i_sd_var = var(sd_i_vox, na.rm = T),
i_sd_sd = sd(sd_i_vox, na.rm = T),
i_sd_cv = sd(sd_i_vox, na.rm = T)/mean(sd_i_vox, na.rm = T),
i_sd_IQR = IQR(sd_i_vox, na.rm = T),
i_sd_skew = e1071::skewness(sd_i_vox, na.rm = T),
i_sd_kurt = e1071::kurtosis(sd_i_vox, na.rm = T),
i_cv_med = median(cv_i_vox, na.rm = T),
i_cv_mean = mean(cv_i_vox, na.rm = T),
i_cv_var = var(cv_i_vox, na.rm = T),
i_cv_sd = sd(cv_i_vox, na.rm = T),
i_cv_cv = sd(cv_i_vox, na.rm = T)/mean(cv_i_vox, na.rm = T),
i_cv_IQR = IQR(cv_i_vox, na.rm = T),
i_cv_skew = e1071::skewness(cv_i_vox, na.rm = T),
i_cv_kurt = e1071::kurtosis(cv_i_vox, na.rm = T),
i_IQR_med = median(IQR_i_vox, na.rm = T),
i_IQR_mean = mean(IQR_i_vox, na.rm = T),
i_IQR_var = var(IQR_i_vox, na.rm = T),
i_IQR_sd = sd(IQR_i_vox, na.rm = T),
i_IQR_cv = sd(IQR_i_vox, na.rm = T)/mean(IQR_i_vox, na.rm = T),
i_IQR_IQR = IQR(IQR_i_vox, na.rm = T),
i_IQR_skew = e1071::skewness(IQR_i_vox, na.rm = T),
i_IQR_kurt = e1071::kurtosis(IQR_i_vox, na.rm = T),
i_skew_med = median(skew_i_vox, na.rm = T),
i_skew_mean = mean(skew_i_vox, na.rm = T),
i_skew_var = var(skew_i_vox, na.rm = T),
i_skew_sd = sd(skew_i_vox, na.rm = T),
i_skew_cv = sd(skew_i_vox, na.rm = T)/mean(skew_i_vox, na.rm = T),
i_skew_IQR = IQR(skew_i_vox, na.rm = T),
i_skew_skew = e1071::skewness(skew_i_vox, na.rm = T),
i_skew_kurt = e1071::kurtosis(skew_i_vox, na.rm = T),
i_kurt_med = median(kurt_i_vox, na.rm = T),
i_kurt_mean = mean(kurt_i_vox, na.rm = T),
i_kurt_var = var(kurt_i_vox, na.rm = T),
i_kurt_sd = sd(kurt_i_vox, na.rm = T),
i_kurt_cv = sd(kurt_i_vox, na.rm = T)/mean(kurt_i_vox, na.rm = T),
i_kurt_IQR = IQR(kurt_i_vox, na.rm = T),
i_kurt_skew = e1071::skewness(kurt_i_vox, na.rm = T),
i_kurt_kurt = e1071::kurtosis(kurt_i_vox, na.rm = T),
P_Di_mean = mean(npoints_below, na.rm = T),
P_Di_var = var(npoints_below, na.rm = T),
P_Di_sd = sd(npoints_below, na.rm = T),
P_Di_cv = sd(npoints_below, na.rm = T)/mean(npoints_below, na.rm = T),
P_Di_IQR = IQR(npoints_below, na.rm = T),
P_Di_skew = e1071::skewness(npoints_below, na.rm = T),
P_Di_kurt = e1071::kurtosis(npoints_below, na.rm = T),
npoints_above_med = median(npoints_above, na.rm = T),
npoints_above_mean = mean(npoints_above, na.rm = T),
npoints_above_var = var(npoints_above, na.rm = T),
npoints_above_sd = sd(npoints_above, na.rm = T),
npoints_above_cv = sd(npoints_above, na.rm = T)/mean(npoints_above, na.rm = T),
npoints_above_IQR = IQR(npoints_above, na.rm = T),
npoints_above_skew = e1071::skewness(npoints_above, na.rm = T),
npoints_above_kurt = e1071::kurtosis(npoints_above, na.rm = T),
FR_Di_med = median(FR_Di, na.rm = T),
FR_Di_mean = mean(FR_Di, na.rm = T),
FR_Di_var = var(FR_Di, na.rm = T),
FR_Di_sd = sd(FR_Di, na.rm = T),
FR_Di_cv = sd(FR_Di, na.rm = T)/mean(FR_Di, na.rm = T),
FR_Di_IQR = IQR(FR_Di, na.rm = T),
FR_Di_skew = e1071::skewness(FR_Di, na.rm = T),
FR_Di_kurt = e1071::kurtosis(FR_Di, na.rm = T),
i_Di_med = median(i_Di, na.rm = T),
i_Di_mean = mean(i_Di, na.rm = T),
i_Di_var = var(i_Di, na.rm = T),
i_Di_sd = sd(i_Di, na.rm = T),
i_Di_cv = sd(i_Di, na.rm = T)/mean(i_Di, na.rm = T),
i_Di_IQR = IQR(i_Di, na.rm = T),
i_Di_skew = e1071::skewness(i_Di, na.rm = T),
i_Di_kurt = e1071::kurtosis(i_Di, na.rm = T))
View(Z_vox)
devtools::document()
devtools::document()
#devtools::install_github("https://github.com/RCBlackburn/lidRmts", auth_token = " e9c9e7db5d5ff127b9f26359da5473b83897367f")
library(sf)
library(tidyverse)
library(lidR)
# library(doParallel)
# library(foreach)
library(lidRmts)
library(landscapemetrics)
path <- "C:/Users/Ryan/OneDrive/Documents/Projects/FUWI/"
# load in lidar catalog
ctg <- catalog(paste0(path,"norm_las/"))
# load in stem mapped data from the field to look at max crown radius
trees <- read.csv(paste0(path,"field_data/FUWI_2018_Updated_wTreeloc.csv"))
trees <- trees %>% filter(height.m > 1.37)
## create plot sf dataframe with true size and 20 m buffer
plot.sf <- st_as_sf(trees, coords = c("plot.x", "plot.y"), crs = paste0(ctg@proj4string))
plot.sf$plotID <- paste0(plot.sf$block, "--", plot.sf$treatment, "--", plot.sf$plot)
plot.sf <- plot.sf %>% group_by(plotID) %>% summarise(ntrees = n(), IQR_ht = IQR(height.m), block = mean(block), treatment = mean(treatment))
plot(ctg)
plot(plot.sf[,1],add = T)
low <- lasclip(ctg, plot.sf[plot.sf$plotID =="3--5--6",], radius = 11.34970)
plot(low)
med.plot <- subset(plot.sf, plotID =="2--1--16")
med.poly <- st_buffer(med.plot, 11.35)
std_voxel_all(med, resolution = 1, sf_poly = med.poly)
med <- lasclip(ctg, plot.sf[plot.sf$plotID =="2--1--16",], radius = 11.34970)
med <- med %>% lasfilter(Classification == 1)
las = med
resolution = 1
sf_poly = med.poly
vox <- lidR::voxel_metrics(las, func = vox_mt(Z, as.numeric(Intensity)), res = resolution)
# create all possible voxels
x = seq(min(vox$X), max(vox$X), resolution)
y = seq(min(vox$Y), max(vox$Y), resolution)
z = seq(min(vox$Z), max(vox$Z), resolution)
all_vox = expand.grid(X = x, Y = y, Z = z)
data.table::setDT(all_vox)
# merge all and voxel_metrics() output
fullvox = vox[all_vox, on = c("X", "Y", "Z")]
fullvox.df <- as.data.frame(fullvox)
full_vox.sf <- st_as_sf(fullvox.df, coords = c('X', 'Y'), crs = st_crs(sf_poly))
fullvox.crop <- st_intersection(sf_poly, full_vox.sf)
fullvox <- cbind(X = st_coordinates(fullvox.crop)[,1], Y = st_coordinates(fullvox.crop)[,2],
fullvox.crop[,c(which(colnames(fullvox.crop) =="Z"):ncol(fullvox.crop))])
fullvox <- as.data.frame(fullvox)
# give each voxel a unique id and assign 0s and NAs where appropriate
fullvox <- fullvox %>% mutate(id_xyz = paste0(X,"-",Y,"-",Z))
fullvox$SVi[is.na(fullvox$SVi)] <- 0
null_list <- lapply(fullvox$Z_list,is.null)
fullvox$Z_list[do.call(rbind,null_list)] <- NA
fullvox$I_list[do.call(rbind,null_list)] <- NA
nrow(vox)
nrow(fullvox)
nrow(vox) /nrow(fullvox)
##### Individual voxel metrics
### FR_SVi is the frequency ratio of the number of returns in a voxel in relation to total returns (in Pearse et al. 2019 this is FR_Di)
fullvox <- fullvox %>% mutate(FR_SVi = SVi/sum(fullvox$SVi))
### P_Di is the number of returns below each voxel (Pearse et al. 2019; Kim et al. 2016 uses returns above)
# create a vector for Z in each iteration
Zi = fullvox$Z
# for loop to calculate points below each voxel
point_blow = list()
for(i in 1:length(unique(fullvox$Z))){
np_b <- fullvox %>%
group_by(X,Y) %>%
filter(Z < unique(Z)[i]) %>%
summarize(npoints_below = sum(SVi), Z= unique(Zi)[i])
point_blow[[i]] <- np_b
}
# extract point below data and merge using the voxel id
point_blow_all_vox <- do.call(rbind,point_blow)
point_blow_all_vox <- point_blow_all_vox %>% mutate(id_xyz = paste0(X,"-",Y,"-",Z))
fullvox <- fullvox %>% left_join(as.data.frame(point_blow_all_vox[,c(3,5)]), by = "id_xyz", )
### P_Di_above is the number of returns above each voxel (Kim et al. 2016 uses returns above as P_Di)
# for loop to calculate points below each voxel
point_above = list()
for(i in 1:length(unique(fullvox$Z))){
np_a <- fullvox %>%
group_by(X,Y) %>%
filter(Z > unique(Z)[i]) %>%
summarize(npoints_above = sum(SVi, na.rm = T), Z= unique(Zi)[i])
point_above[[i]] <- np_a
}
# extract point below data and merge using the voxel id
point_above_all_vox <- do.call(rbind,point_above)
point_above_all_vox <- point_above_all_vox %>% mutate(id_xyz = paste0(X,"-",Y,"-",Z))
fullvox <- fullvox %>% left_join(as.data.frame(point_above_all_vox[,c(3,5)]), by = "id_xyz", )
# NAs returned for 0 points so it is appropriate to replace them with 0
fullvox$npoints_above[is.na(fullvox$npoints_above)] <- 0
### FR_Di is the frequency ratio of the number of returns above a voxel in relation to total returns (Kim et al. 2016)
fullvox <- fullvox %>% mutate(FR_Di = npoints_above/sum(fullvox$SVi))
### I_Di is the median intensity of returns above each voxel
# for loop to calculate median intensity above each voxel
i_above = list()
for(i in 1:length(unique(fullvox$Z))){
i_a <- fullvox %>% filter(Z > Z[i])
i_a$I_list<- lapply( i_a$I_list, "length<-", max(lengths( i_a$I_list)))
i_abv <- as.data.frame(do.call(rbind, i_a$I_list))
i_a_merge <- cbind(as.data.frame(i_a), i_abv)
i_a_merge <- cbind(X = i_a_merge$X, Y = i_a_merge$Y, i_a_merge[,ncol(i_a)+1:(ncol(i_a_merge)-ncol(i_a))])
i_Di_mt <- i_a_merge %>% pivot_longer(cols = 3:ncol(i_a_merge)) %>%
group_by(X,Y) %>%
summarize(Z = unique(fullvox$Z)[i], i_Di = median(value, na.rm = T))
i_above[[i]] <- i_Di_mt
}
# extract point below data and merge using the voxel id
i_above_all_vox <- do.call(rbind,i_above)
i_above_all_vox <- i_above_all_vox %>% mutate(id_xyz = paste0(X,"-",Y,"-",Z))
fullvox <- fullvox %>% left_join(as.data.frame(i_above_all_vox[,c(4,5)]), by = "id_xyz" )
##### Summarized voxel metrics
### Start by summarizing individual voxel metrics
voxel_summ <- fullvox %>% summarise(z_med_med = median(med_z_vox, na.rm = T),
z_med_mean = mean(med_z_vox, na.rm = T),
z_med_var = var(med_z_vox, na.rm = T),
z_med_sd = sd(med_z_vox, na.rm = T),
z_med_cv = sd(med_z_vox, na.rm = T)/mean(med_z_vox, na.rm = T),
z_med_IQR = IQR(med_z_vox, na.rm = T),
z_med_skew = e1071::skewness(med_z_vox, na.rm = T),
z_med_kurt = e1071::kurtosis(med_z_vox, na.rm = T),
z_mean_med = median(mean_z_vox, na.rm = T),
z_mean_mean = mean(mean_z_vox, na.rm = T),
z_mean_var = var(mean_z_vox, na.rm = T),
z_mean_sd = sd(mean_z_vox, na.rm = T),
z_mean_cv = sd(mean_z_vox, na.rm = T)/mean(mean_z_vox, na.rm = T),
z_mean_IQR = IQR(mean_z_vox, na.rm = T),
z_mean_skew = e1071::skewness(mean_z_vox, na.rm = T),
z_mean_kurt = e1071::kurtosis(mean_z_vox, na.rm = T),
z_var_med = median(var_z_vox, na.rm = T),
z_var_mean = mean(var_z_vox, na.rm = T),
z_var_var = var(var_z_vox, na.rm = T),
z_var_sd = sd(var_z_vox, na.rm = T),
z_var_cv = sd(var_z_vox, na.rm = T)/mean(var_z_vox, na.rm = T),
z_var_IQR = IQR(var_z_vox, na.rm = T),
z_var_skew = e1071::skewness(var_z_vox, na.rm = T),
z_var_kurt = e1071::kurtosis(var_z_vox, na.rm = T),
z_sd_med = median(sd_z_vox, na.rm = T),
z_sd_mean = mean(sd_z_vox, na.rm = T),
z_sd_var = var(sd_z_vox, na.rm = T),
z_sd_sd = sd(sd_z_vox, na.rm = T),
z_sd_cv = sd(sd_z_vox, na.rm = T)/mean(sd_z_vox, na.rm = T),
z_sd_IQR = IQR(sd_z_vox, na.rm = T),
z_sd_skew = e1071::skewness(sd_z_vox, na.rm = T),
z_sd_kurt = e1071::kurtosis(sd_z_vox, na.rm = T),
z_cv_med = median(cv_z_vox, na.rm = T),
z_cv_mean = mean(cv_z_vox, na.rm = T),
z_cv_var = var(cv_z_vox, na.rm = T),
z_cv_sd = sd(cv_z_vox, na.rm = T),
z_cv_cv = sd(cv_z_vox, na.rm = T)/mean(cv_z_vox, na.rm = T),
z_cv_IQR = IQR(cv_z_vox, na.rm = T),
z_cv_skew = e1071::skewness(cv_z_vox, na.rm = T),
z_cv_kurt = e1071::kurtosis(cv_z_vox, na.rm = T),
z_IQR_med = median(IQR_z_vox, na.rm = T),
z_IQR_mean = mean(IQR_z_vox, na.rm = T),
z_IQR_var = var(IQR_z_vox, na.rm = T),
z_IQR_sd = sd(IQR_z_vox, na.rm = T),
z_IQR_cv = sd(IQR_z_vox, na.rm = T)/mean(IQR_z_vox, na.rm = T),
z_IQR_IQR = IQR(IQR_z_vox, na.rm = T),
z_IQR_skew = e1071::skewness(IQR_z_vox, na.rm = T),
z_IQR_kurt = e1071::kurtosis(IQR_z_vox, na.rm = T),
z_skew_med = median(skew_z_vox, na.rm = T),
z_skew_mean = mean(skew_z_vox, na.rm = T),
z_skew_var = var(skew_z_vox, na.rm = T),
z_skew_sd = sd(skew_z_vox, na.rm = T),
z_skew_cv = sd(skew_z_vox, na.rm = T)/mean(skew_z_vox, na.rm = T),
z_skew_IQR = IQR(skew_z_vox, na.rm = T),
z_skew_skew = e1071::skewness(skew_z_vox, na.rm = T),
z_skew_kurt = e1071::kurtosis(skew_z_vox, na.rm = T),
z_kurt_med = median(kurt_z_vox, na.rm = T),
z_kurt_mean = mean(kurt_z_vox, na.rm = T),
z_kurt_var = var(kurt_z_vox, na.rm = T),
z_kurt_sd = sd(kurt_z_vox, na.rm = T),
z_kurt_cv = sd(kurt_z_vox, na.rm = T)/mean(kurt_z_vox, na.rm = T),
z_kurt_IQR = IQR(kurt_z_vox, na.rm = T),
z_kurt_skew = e1071::skewness(kurt_z_vox, na.rm = T),
z_kurt_kurt = e1071::kurtosis(kurt_z_vox, na.rm = T),
i_vox_med = median(med_i_vox, na.rm = T),
i_med_mean = mean(med_i_vox, na.rm = T),
i_med_var = var(med_i_vox, na.rm = T),
i_med_sd = sd(med_i_vox, na.rm = T),
i_med_cv = sd(med_i_vox, na.rm = T)/mean(med_i_vox, na.rm = T),
i_med_IQR = IQR(med_i_vox, na.rm = T),
i_med_skew = e1071::skewness(med_i_vox, na.rm = T),
i_med_kurt = e1071::kurtosis(med_i_vox, na.rm = T),
i_mean_med = median(mean_i_vox, na.rm = T),
i_mean_mean = mean(mean_i_vox, na.rm = T),
i_mean_var = var(mean_i_vox, na.rm = T),
i_mean_sd = sd(mean_i_vox, na.rm = T),
i_mean_cv = sd(mean_i_vox, na.rm = T)/mean(mean_i_vox, na.rm = T),
i_mean_IQR = IQR(mean_i_vox, na.rm = T),
i_mean_skew = e1071::skewness(mean_i_vox, na.rm = T),
i_mean_kurt = e1071::kurtosis(mean_i_vox, na.rm = T),
i_var_med = median(var_i_vox, na.rm = T),
i_var_mean = mean(var_i_vox, na.rm = T),
i_var_var = var(var_i_vox, na.rm = T),
i_var_sd = sd(var_i_vox, na.rm = T),
i_var_cv = sd(var_i_vox, na.rm = T)/mean(var_i_vox, na.rm = T),
i_var_IQR = IQR(var_i_vox, na.rm = T),
i_var_skew = e1071::skewness(var_i_vox, na.rm = T),
i_var_kurt = e1071::kurtosis(var_i_vox, na.rm = T),
i_sd_med = median(sd_i_vox, na.rm = T),
i_sd_mean = mean(sd_i_vox, na.rm = T),
i_sd_var = var(sd_i_vox, na.rm = T),
i_sd_sd = sd(sd_i_vox, na.rm = T),
i_sd_cv = sd(sd_i_vox, na.rm = T)/mean(sd_i_vox, na.rm = T),
i_sd_IQR = IQR(sd_i_vox, na.rm = T),
i_sd_skew = e1071::skewness(sd_i_vox, na.rm = T),
i_sd_kurt = e1071::kurtosis(sd_i_vox, na.rm = T),
i_cv_med = median(cv_i_vox, na.rm = T),
i_cv_mean = mean(cv_i_vox, na.rm = T),
i_cv_var = var(cv_i_vox, na.rm = T),
i_cv_sd = sd(cv_i_vox, na.rm = T),
i_cv_cv = sd(cv_i_vox, na.rm = T)/mean(cv_i_vox, na.rm = T),
i_cv_IQR = IQR(cv_i_vox, na.rm = T),
i_cv_skew = e1071::skewness(cv_i_vox, na.rm = T),
i_cv_kurt = e1071::kurtosis(cv_i_vox, na.rm = T),
i_IQR_med = median(IQR_i_vox, na.rm = T),
i_IQR_mean = mean(IQR_i_vox, na.rm = T),
i_IQR_var = var(IQR_i_vox, na.rm = T),
i_IQR_sd = sd(IQR_i_vox, na.rm = T),
i_IQR_cv = sd(IQR_i_vox, na.rm = T)/mean(IQR_i_vox, na.rm = T),
i_IQR_IQR = IQR(IQR_i_vox, na.rm = T),
i_IQR_skew = e1071::skewness(IQR_i_vox, na.rm = T),
i_IQR_kurt = e1071::kurtosis(IQR_i_vox, na.rm = T),
i_skew_med = median(skew_i_vox, na.rm = T),
i_skew_mean = mean(skew_i_vox, na.rm = T),
i_skew_var = var(skew_i_vox, na.rm = T),
i_skew_sd = sd(skew_i_vox, na.rm = T),
i_skew_cv = sd(skew_i_vox, na.rm = T)/mean(skew_i_vox, na.rm = T),
i_skew_IQR = IQR(skew_i_vox, na.rm = T),
i_skew_skew = e1071::skewness(skew_i_vox, na.rm = T),
i_skew_kurt = e1071::kurtosis(skew_i_vox, na.rm = T),
i_kurt_med = median(kurt_i_vox, na.rm = T),
i_kurt_mean = mean(kurt_i_vox, na.rm = T),
i_kurt_var = var(kurt_i_vox, na.rm = T),
i_kurt_sd = sd(kurt_i_vox, na.rm = T),
i_kurt_cv = sd(kurt_i_vox, na.rm = T)/mean(kurt_i_vox, na.rm = T),
i_kurt_IQR = IQR(kurt_i_vox, na.rm = T),
i_kurt_skew = e1071::skewness(kurt_i_vox, na.rm = T),
i_kurt_kurt = e1071::kurtosis(kurt_i_vox, na.rm = T),
P_Di_med = median(npoints_below, na.rm = T),
P_Di_mean = mean(npoints_below, na.rm = T),
P_Di_var = var(npoints_below, na.rm = T),
P_Di_sd = sd(npoints_below, na.rm = T),
P_Di_cv = sd(npoints_below, na.rm = T)/mean(npoints_below, na.rm = T),
P_Di_IQR = IQR(npoints_below, na.rm = T),
P_Di_skew = e1071::skewness(npoints_below, na.rm = T),
P_Di_kurt = e1071::kurtosis(npoints_below, na.rm = T),
npoints_above_med = median(npoints_above, na.rm = T),
npoints_above_mean = mean(npoints_above, na.rm = T),
npoints_above_var = var(npoints_above, na.rm = T),
npoints_above_sd = sd(npoints_above, na.rm = T),
npoints_above_cv = sd(npoints_above, na.rm = T)/mean(npoints_above, na.rm = T),
npoints_above_IQR = IQR(npoints_above, na.rm = T),
npoints_above_skew = e1071::skewness(npoints_above, na.rm = T),
npoints_above_kurt = e1071::kurtosis(npoints_above, na.rm = T),
FR_Di_med = median(FR_Di, na.rm = T),
FR_Di_mean = mean(FR_Di, na.rm = T),
FR_Di_var = var(FR_Di, na.rm = T),
FR_Di_sd = sd(FR_Di, na.rm = T),
FR_Di_cv = sd(FR_Di, na.rm = T)/mean(FR_Di, na.rm = T),
FR_Di_IQR = IQR(FR_Di, na.rm = T),
FR_Di_skew = e1071::skewness(FR_Di, na.rm = T),
FR_Di_kurt = e1071::kurtosis(FR_Di, na.rm = T),
i_Di_med = median(i_Di, na.rm = T),
i_Di_mean = mean(i_Di, na.rm = T),
i_Di_var = var(i_Di, na.rm = T),
i_Di_sd = sd(i_Di, na.rm = T),
i_Di_cv = sd(i_Di, na.rm = T)/mean(i_Di, na.rm = T),
i_Di_IQR = IQR(i_Di, na.rm = T),
i_Di_skew = e1071::skewness(i_Di, na.rm = T),
i_Di_kurt = e1071::kurtosis(i_Di, na.rm = T),
pct_fill_vox = nrow(vox) /nrow(fullvox)
)
View(voxel_summ)
devtools::document()
