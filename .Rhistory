i_Di_IQR = IQR(i_Di, na.rm = T),
i_Di_skew = e1071::skewness(i_Di, na.rm = T),
i_Di_kurt = e1071::kurtosis(i_Di, na.rm = T))
colnames(Z_vox) <- paste0(colnames(Z_vox), "HB", i)
Z_vox_list[[i]] <- Zvox
}
## summarize by hieght bins
Z_vox_list = list()
for(i in 1:length(unique(fullvox$Z))){
Z_vox <- fullvox %>% filter(Z == unique(fullvox$Z)[i]) %>%
summarize(P_Di_mean = mean(npoints_below, na.rm = T),
P_Di_var = var(npoints_below, na.rm = T),
P_Di_sd = sd(npoints_below, na.rm = T),
P_Di_cv = sd(npoints_below, na.rm = T)/mean(npoints_below, na.rm = T),
P_Di_IQR = IQR(npoints_below, na.rm = T),
P_Di_skew = e1071::skewness(npoints_below, na.rm = T),
P_Di_kurt = e1071::kurtosis(npoints_below, na.rm = T),
npoints_above_med = median(npoints_above, na.rm = T),
npoints_above_mean = mean(npoints_above, na.rm = T),
npoints_above_var = var(npoints_above, na.rm = T),
npoints_above_sd = sd(npoints_above, na.rm = T),
npoints_above_cv = sd(npoints_above, na.rm = T)/mean(npoints_above, na.rm = T),
npoints_above_IQR = IQR(npoints_above, na.rm = T),
npoints_above_skew = e1071::skewness(npoints_above, na.rm = T),
npoints_above_kurt = e1071::kurtosis(npoints_above, na.rm = T),
FR_Di_med = median(FR_Di, na.rm = T),
FR_Di_mean = mean(FR_Di, na.rm = T),
FR_Di_var = var(FR_Di, na.rm = T),
FR_Di_sd = sd(FR_Di, na.rm = T),
FR_Di_cv = sd(FR_Di, na.rm = T)/mean(FR_Di, na.rm = T),
FR_Di_IQR = IQR(FR_Di, na.rm = T),
FR_Di_skew = e1071::skewness(FR_Di, na.rm = T),
FR_Di_kurt = e1071::kurtosis(FR_Di, na.rm = T),
i_Di_med = median(i_Di, na.rm = T),
i_Di_mean = mean(i_Di, na.rm = T),
i_Di_var = var(i_Di, na.rm = T),
i_Di_sd = sd(i_Di, na.rm = T),
i_Di_cv = sd(i_Di, na.rm = T)/mean(i_Di, na.rm = T),
i_Di_IQR = IQR(i_Di, na.rm = T),
i_Di_skew = e1071::skewness(i_Di, na.rm = T),
i_Di_kurt = e1071::kurtosis(i_Di, na.rm = T))
colnames(Z_vox) <- paste0(colnames(Z_vox), "HB", i)
Z_vox_list[[i]] <- Z_vox
}
do.call(cbind, Z_vox_list)
HB_metrics <- do.call(cbind, Z_vox_list)
View(HB_metrics)
## summarize by hieght bins
Z_vox_list = list()
for(i in 1:length(unique(fullvox$Z))){
Z_vox <- fullvox %>% filter(Z == unique(fullvox$Z)[i]) %>%
summarize(z_med_med = median(med_z_vox, na.rm = T),
z_med_mean = mean(med_z_vox, na.rm = T),
z_med_var = var(med_z_vox, na.rm = T),
z_med_sd = sd(med_z_vox, na.rm = T),
z_med_cv = sd(med_z_vox, na.rm = T)/mean(med_z_vox, na.rm = T),
z_med_IQR = IQR(med_z_vox, na.rm = T),
z_med_skew = e1071::skewness(med_z_vox, na.rm = T),
z_med_kurt = e1071::kurtosis(med_z_vox, na.rm = T),
z_mean_med = median(mean_z_vox, na.rm = T),
z_mean_mean = mean(mean_z_vox, na.rm = T),
z_mean_var = var(mean_z_vox, na.rm = T),
z_mean_sd = sd(mean_z_vox, na.rm = T),
z_mean_cv = sd(mean_z_vox, na.rm = T)/mean(mean_z_vox, na.rm = T),
z_mean_IQR = IQR(mean_z_vox, na.rm = T),
z_mean_skew = e1071::skewness(mean_z_vox, na.rm = T),
z_mean_kurt = e1071::kurtosis(mean_z_vox, na.rm = T),
z_var_med = median(var_z_vox, na.rm = T),
z_var_mean = mean(var_z_vox, na.rm = T),
z_var_var = var(var_z_vox, na.rm = T),
z_var_sd = sd(var_z_vox, na.rm = T),
z_var_cv = sd(var_z_vox, na.rm = T)/mean(var_z_vox, na.rm = T),
z_var_IQR = IQR(var_z_vox, na.rm = T),
z_var_skew = e1071::skewness(var_z_vox, na.rm = T),
z_var_kurt = e1071::kurtosis(var_z_vox, na.rm = T),
z_sd_med = median(sd_z_vox, na.rm = T),
z_sd_mean = mean(sd_z_vox, na.rm = T),
z_sd_var = var(sd_z_vox, na.rm = T),
z_sd_sd = sd(sd_z_vox, na.rm = T),
z_sd_cv = sd(sd_z_vox, na.rm = T)/mean(sd_z_vox, na.rm = T),
z_sd_IQR = IQR(sd_z_vox, na.rm = T),
z_sd_skew = e1071::skewness(sd_z_vox, na.rm = T),
z_sd_kurt = e1071::kurtosis(sd_z_vox, na.rm = T),
z_cv_med = median(cv_z_vox, na.rm = T),
z_cv_mean = mean(cv_z_vox, na.rm = T),
z_cv_var = var(cv_z_vox, na.rm = T),
z_cv_sd = sd(cv_z_vox, na.rm = T),
z_cv_cv = sd(cv_z_vox, na.rm = T)/mean(cv_z_vox, na.rm = T),
z_cv_IQR = IQR(cv_z_vox, na.rm = T),
z_cv_skew = e1071::skewness(cv_z_vox, na.rm = T),
z_cv_kurt = e1071::kurtosis(cv_z_vox, na.rm = T),
z_IQR_med = median(IQR_z_vox, na.rm = T),
z_IQR_mean = mean(IQR_z_vox, na.rm = T),
z_IQR_var = var(IQR_z_vox, na.rm = T),
z_IQR_sd = sd(IQR_z_vox, na.rm = T),
z_IQR_cv = sd(IQR_z_vox, na.rm = T)/mean(IQR_z_vox, na.rm = T),
z_IQR_IQR = IQR(IQR_z_vox, na.rm = T),
z_IQR_skew = e1071::skewness(IQR_z_vox, na.rm = T),
z_IQR_kurt = e1071::kurtosis(IQR_z_vox, na.rm = T),
z_skew_med = median(skew_z_vox, na.rm = T),
z_skew_mean = mean(skew_z_vox, na.rm = T),
z_skew_var = var(skew_z_vox, na.rm = T),
z_skew_sd = sd(skew_z_vox, na.rm = T),
z_skew_cv = sd(skew_z_vox, na.rm = T)/mean(skew_z_vox, na.rm = T),
z_skew_IQR = IQR(skew_z_vox, na.rm = T),
z_skew_skew = e1071::skewness(skew_z_vox, na.rm = T),
z_skew_kurt = e1071::kurtosis(skew_z_vox, na.rm = T),
z_kurt_med = median(kurt_z_vox, na.rm = T),
z_kurt_mean = mean(kurt_z_vox, na.rm = T),
z_kurt_var = var(kurt_z_vox, na.rm = T),
z_kurt_sd = sd(kurt_z_vox, na.rm = T),
z_kurt_cv = sd(kurt_z_vox, na.rm = T)/mean(kurt_z_vox, na.rm = T),
z_kurt_IQR = IQR(kurt_z_vox, na.rm = T),
z_kurt_skew = e1071::skewness(kurt_z_vox, na.rm = T),
z_kurt_kurt = e1071::kurtosis(kurt_z_vox, na.rm = T),
i_vox_med = median(med_i_vox, na.rm = T),
i_med_mean = mean(med_i_vox, na.rm = T),
i_med_var = var(med_i_vox, na.rm = T),
i_med_sd = sd(med_i_vox, na.rm = T),
i_med_cv = sd(med_i_vox, na.rm = T)/mean(med_i_vox, na.rm = T),
i_med_IQR = IQR(med_i_vox, na.rm = T),
i_med_skew = e1071::skewness(med_i_vox, na.rm = T),
i_med_kurt = e1071::kurtosis(med_i_vox, na.rm = T),
i_mean_med = median(mean_i_vox, na.rm = T),
i_mean_mean = mean(mean_i_vox, na.rm = T),
i_mean_var = var(mean_i_vox, na.rm = T),
i_mean_sd = sd(mean_i_vox, na.rm = T),
i_mean_cv = sd(mean_i_vox, na.rm = T)/mean(mean_i_vox, na.rm = T),
i_mean_IQR = IQR(mean_i_vox, na.rm = T),
i_mean_skew = e1071::skewness(mean_i_vox, na.rm = T),
i_mean_kurt = e1071::kurtosis(mean_i_vox, na.rm = T),
i_var_med = median(var_i_vox, na.rm = T),
i_var_mean = mean(var_i_vox, na.rm = T),
i_var_var = var(var_i_vox, na.rm = T),
i_var_sd = sd(var_i_vox, na.rm = T),
i_var_cv = sd(var_i_vox, na.rm = T)/mean(var_i_vox, na.rm = T),
i_var_IQR = IQR(var_i_vox, na.rm = T),
i_var_skew = e1071::skewness(var_i_vox, na.rm = T),
i_var_kurt = e1071::kurtosis(var_i_vox, na.rm = T),
i_sd_med = median(sd_i_vox, na.rm = T),
i_sd_mean = mean(sd_i_vox, na.rm = T),
i_sd_var = var(sd_i_vox, na.rm = T),
i_sd_sd = sd(sd_i_vox, na.rm = T),
i_sd_cv = sd(sd_i_vox, na.rm = T)/mean(sd_i_vox, na.rm = T),
i_sd_IQR = IQR(sd_i_vox, na.rm = T),
i_sd_skew = e1071::skewness(sd_i_vox, na.rm = T),
i_sd_kurt = e1071::kurtosis(sd_i_vox, na.rm = T),
i_cv_med = median(cv_i_vox, na.rm = T),
i_cv_mean = mean(cv_i_vox, na.rm = T),
i_cv_var = var(cv_i_vox, na.rm = T),
i_cv_sd = sd(cv_i_vox, na.rm = T),
i_cv_cv = sd(cv_i_vox, na.rm = T)/mean(cv_i_vox, na.rm = T),
i_cv_IQR = IQR(cv_i_vox, na.rm = T),
i_cv_skew = e1071::skewness(cv_i_vox, na.rm = T),
i_cv_kurt = e1071::kurtosis(cv_i_vox, na.rm = T),
i_IQR_med = median(IQR_i_vox, na.rm = T),
i_IQR_mean = mean(IQR_i_vox, na.rm = T),
i_IQR_var = var(IQR_i_vox, na.rm = T),
i_IQR_sd = sd(IQR_i_vox, na.rm = T),
i_IQR_cv = sd(IQR_i_vox, na.rm = T)/mean(IQR_i_vox, na.rm = T),
i_IQR_IQR = IQR(IQR_i_vox, na.rm = T),
i_IQR_skew = e1071::skewness(IQR_i_vox, na.rm = T),
i_IQR_kurt = e1071::kurtosis(IQR_i_vox, na.rm = T),
i_skew_med = median(skew_i_vox, na.rm = T),
i_skew_mean = mean(skew_i_vox, na.rm = T),
i_skew_var = var(skew_i_vox, na.rm = T),
i_skew_sd = sd(skew_i_vox, na.rm = T),
i_skew_cv = sd(skew_i_vox, na.rm = T)/mean(skew_i_vox, na.rm = T),
i_skew_IQR = IQR(skew_i_vox, na.rm = T),
i_skew_skew = e1071::skewness(skew_i_vox, na.rm = T),
i_skew_kurt = e1071::kurtosis(skew_i_vox, na.rm = T),
i_kurt_med = median(kurt_i_vox, na.rm = T),
i_kurt_mean = mean(kurt_i_vox, na.rm = T),
i_kurt_var = var(kurt_i_vox, na.rm = T),
i_kurt_sd = sd(kurt_i_vox, na.rm = T),
i_kurt_cv = sd(kurt_i_vox, na.rm = T)/mean(kurt_i_vox, na.rm = T),
i_kurt_IQR = IQR(kurt_i_vox, na.rm = T),
i_kurt_skew = e1071::skewness(kurt_i_vox, na.rm = T),
i_kurt_kurt = e1071::kurtosis(kurt_i_vox, na.rm = T),
P_Di_mean = mean(npoints_below, na.rm = T),
P_Di_var = var(npoints_below, na.rm = T),
P_Di_sd = sd(npoints_below, na.rm = T),
P_Di_cv = sd(npoints_below, na.rm = T)/mean(npoints_below, na.rm = T),
P_Di_IQR = IQR(npoints_below, na.rm = T),
P_Di_skew = e1071::skewness(npoints_below, na.rm = T),
P_Di_kurt = e1071::kurtosis(npoints_below, na.rm = T),
npoints_above_med = median(npoints_above, na.rm = T),
npoints_above_mean = mean(npoints_above, na.rm = T),
npoints_above_var = var(npoints_above, na.rm = T),
npoints_above_sd = sd(npoints_above, na.rm = T),
npoints_above_cv = sd(npoints_above, na.rm = T)/mean(npoints_above, na.rm = T),
npoints_above_IQR = IQR(npoints_above, na.rm = T),
npoints_above_skew = e1071::skewness(npoints_above, na.rm = T),
npoints_above_kurt = e1071::kurtosis(npoints_above, na.rm = T),
FR_Di_med = median(FR_Di, na.rm = T),
FR_Di_mean = mean(FR_Di, na.rm = T),
FR_Di_var = var(FR_Di, na.rm = T),
FR_Di_sd = sd(FR_Di, na.rm = T),
FR_Di_cv = sd(FR_Di, na.rm = T)/mean(FR_Di, na.rm = T),
FR_Di_IQR = IQR(FR_Di, na.rm = T),
FR_Di_skew = e1071::skewness(FR_Di, na.rm = T),
FR_Di_kurt = e1071::kurtosis(FR_Di, na.rm = T),
i_Di_med = median(i_Di, na.rm = T),
i_Di_mean = mean(i_Di, na.rm = T),
i_Di_var = var(i_Di, na.rm = T),
i_Di_sd = sd(i_Di, na.rm = T),
i_Di_cv = sd(i_Di, na.rm = T)/mean(i_Di, na.rm = T),
i_Di_IQR = IQR(i_Di, na.rm = T),
i_Di_skew = e1071::skewness(i_Di, na.rm = T),
i_Di_kurt = e1071::kurtosis(i_Di, na.rm = T))
colnames(Z_vox) <- paste0(colnames(Z_vox), "HB", i)
Z_vox_list[[i]] <- Z_vox
}
HB_metrics <- do.call(cbind, Z_vox_list)
View(HB_metrics)
##### Summarized voxel metrics
### Start by summarizing individual voxel metrics
voxel_summ <- fullvox %>% summarise(z_med_med = median(med_z_vox, na.rm = T),
z_med_mean = mean(med_z_vox, na.rm = T),
z_med_var = var(med_z_vox, na.rm = T),
z_med_sd = sd(med_z_vox, na.rm = T),
z_med_cv = sd(med_z_vox, na.rm = T)/mean(med_z_vox, na.rm = T),
z_med_IQR = IQR(med_z_vox, na.rm = T),
z_med_skew = e1071::skewness(med_z_vox, na.rm = T),
z_med_kurt = e1071::kurtosis(med_z_vox, na.rm = T),
z_mean_med = median(mean_z_vox, na.rm = T),
z_mean_mean = mean(mean_z_vox, na.rm = T),
z_mean_var = var(mean_z_vox, na.rm = T),
z_mean_sd = sd(mean_z_vox, na.rm = T),
z_mean_cv = sd(mean_z_vox, na.rm = T)/mean(mean_z_vox, na.rm = T),
z_mean_IQR = IQR(mean_z_vox, na.rm = T),
z_mean_skew = e1071::skewness(mean_z_vox, na.rm = T),
z_mean_kurt = e1071::kurtosis(mean_z_vox, na.rm = T),
z_var_med = median(var_z_vox, na.rm = T),
z_var_mean = mean(var_z_vox, na.rm = T),
z_var_var = var(var_z_vox, na.rm = T),
z_var_sd = sd(var_z_vox, na.rm = T),
z_var_cv = sd(var_z_vox, na.rm = T)/mean(var_z_vox, na.rm = T),
z_var_IQR = IQR(var_z_vox, na.rm = T),
z_var_skew = e1071::skewness(var_z_vox, na.rm = T),
z_var_kurt = e1071::kurtosis(var_z_vox, na.rm = T),
z_sd_med = median(sd_z_vox, na.rm = T),
z_sd_mean = mean(sd_z_vox, na.rm = T),
z_sd_var = var(sd_z_vox, na.rm = T),
z_sd_sd = sd(sd_z_vox, na.rm = T),
z_sd_cv = sd(sd_z_vox, na.rm = T)/mean(sd_z_vox, na.rm = T),
z_sd_IQR = IQR(sd_z_vox, na.rm = T),
z_sd_skew = e1071::skewness(sd_z_vox, na.rm = T),
z_sd_kurt = e1071::kurtosis(sd_z_vox, na.rm = T),
z_cv_med = median(cv_z_vox, na.rm = T),
z_cv_mean = mean(cv_z_vox, na.rm = T),
z_cv_var = var(cv_z_vox, na.rm = T),
z_cv_sd = sd(cv_z_vox, na.rm = T),
z_cv_cv = sd(cv_z_vox, na.rm = T)/mean(cv_z_vox, na.rm = T),
z_cv_IQR = IQR(cv_z_vox, na.rm = T),
z_cv_skew = e1071::skewness(cv_z_vox, na.rm = T),
z_cv_kurt = e1071::kurtosis(cv_z_vox, na.rm = T),
z_IQR_med = median(IQR_z_vox, na.rm = T),
z_IQR_mean = mean(IQR_z_vox, na.rm = T),
z_IQR_var = var(IQR_z_vox, na.rm = T),
z_IQR_sd = sd(IQR_z_vox, na.rm = T),
z_IQR_cv = sd(IQR_z_vox, na.rm = T)/mean(IQR_z_vox, na.rm = T),
z_IQR_IQR = IQR(IQR_z_vox, na.rm = T),
z_IQR_skew = e1071::skewness(IQR_z_vox, na.rm = T),
z_IQR_kurt = e1071::kurtosis(IQR_z_vox, na.rm = T),
z_skew_med = median(skew_z_vox, na.rm = T),
z_skew_mean = mean(skew_z_vox, na.rm = T),
z_skew_var = var(skew_z_vox, na.rm = T),
z_skew_sd = sd(skew_z_vox, na.rm = T),
z_skew_cv = sd(skew_z_vox, na.rm = T)/mean(skew_z_vox, na.rm = T),
z_skew_IQR = IQR(skew_z_vox, na.rm = T),
z_skew_skew = e1071::skewness(skew_z_vox, na.rm = T),
z_skew_kurt = e1071::kurtosis(skew_z_vox, na.rm = T),
z_kurt_med = median(kurt_z_vox, na.rm = T),
z_kurt_mean = mean(kurt_z_vox, na.rm = T),
z_kurt_var = var(kurt_z_vox, na.rm = T),
z_kurt_sd = sd(kurt_z_vox, na.rm = T),
z_kurt_cv = sd(kurt_z_vox, na.rm = T)/mean(kurt_z_vox, na.rm = T),
z_kurt_IQR = IQR(kurt_z_vox, na.rm = T),
z_kurt_skew = e1071::skewness(kurt_z_vox, na.rm = T),
z_kurt_kurt = e1071::kurtosis(kurt_z_vox, na.rm = T),
i_vox_med = median(med_i_vox, na.rm = T),
i_med_mean = mean(med_i_vox, na.rm = T),
i_med_var = var(med_i_vox, na.rm = T),
i_med_sd = sd(med_i_vox, na.rm = T),
i_med_cv = sd(med_i_vox, na.rm = T)/mean(med_i_vox, na.rm = T),
i_med_IQR = IQR(med_i_vox, na.rm = T),
i_med_skew = e1071::skewness(med_i_vox, na.rm = T),
i_med_kurt = e1071::kurtosis(med_i_vox, na.rm = T),
i_mean_med = median(mean_i_vox, na.rm = T),
i_mean_mean = mean(mean_i_vox, na.rm = T),
i_mean_var = var(mean_i_vox, na.rm = T),
i_mean_sd = sd(mean_i_vox, na.rm = T),
i_mean_cv = sd(mean_i_vox, na.rm = T)/mean(mean_i_vox, na.rm = T),
i_mean_IQR = IQR(mean_i_vox, na.rm = T),
i_mean_skew = e1071::skewness(mean_i_vox, na.rm = T),
i_mean_kurt = e1071::kurtosis(mean_i_vox, na.rm = T),
i_var_med = median(var_i_vox, na.rm = T),
i_var_mean = mean(var_i_vox, na.rm = T),
i_var_var = var(var_i_vox, na.rm = T),
i_var_sd = sd(var_i_vox, na.rm = T),
i_var_cv = sd(var_i_vox, na.rm = T)/mean(var_i_vox, na.rm = T),
i_var_IQR = IQR(var_i_vox, na.rm = T),
i_var_skew = e1071::skewness(var_i_vox, na.rm = T),
i_var_kurt = e1071::kurtosis(var_i_vox, na.rm = T),
i_sd_med = median(sd_i_vox, na.rm = T),
i_sd_mean = mean(sd_i_vox, na.rm = T),
i_sd_var = var(sd_i_vox, na.rm = T),
i_sd_sd = sd(sd_i_vox, na.rm = T),
i_sd_cv = sd(sd_i_vox, na.rm = T)/mean(sd_i_vox, na.rm = T),
i_sd_IQR = IQR(sd_i_vox, na.rm = T),
i_sd_skew = e1071::skewness(sd_i_vox, na.rm = T),
i_sd_kurt = e1071::kurtosis(sd_i_vox, na.rm = T),
i_cv_med = median(cv_i_vox, na.rm = T),
i_cv_mean = mean(cv_i_vox, na.rm = T),
i_cv_var = var(cv_i_vox, na.rm = T),
i_cv_sd = sd(cv_i_vox, na.rm = T),
i_cv_cv = sd(cv_i_vox, na.rm = T)/mean(cv_i_vox, na.rm = T),
i_cv_IQR = IQR(cv_i_vox, na.rm = T),
i_cv_skew = e1071::skewness(cv_i_vox, na.rm = T),
i_cv_kurt = e1071::kurtosis(cv_i_vox, na.rm = T),
i_IQR_med = median(IQR_i_vox, na.rm = T),
i_IQR_mean = mean(IQR_i_vox, na.rm = T),
i_IQR_var = var(IQR_i_vox, na.rm = T),
i_IQR_sd = sd(IQR_i_vox, na.rm = T),
i_IQR_cv = sd(IQR_i_vox, na.rm = T)/mean(IQR_i_vox, na.rm = T),
i_IQR_IQR = IQR(IQR_i_vox, na.rm = T),
i_IQR_skew = e1071::skewness(IQR_i_vox, na.rm = T),
i_IQR_kurt = e1071::kurtosis(IQR_i_vox, na.rm = T),
i_skew_med = median(skew_i_vox, na.rm = T),
i_skew_mean = mean(skew_i_vox, na.rm = T),
i_skew_var = var(skew_i_vox, na.rm = T),
i_skew_sd = sd(skew_i_vox, na.rm = T),
i_skew_cv = sd(skew_i_vox, na.rm = T)/mean(skew_i_vox, na.rm = T),
i_skew_IQR = IQR(skew_i_vox, na.rm = T),
i_skew_skew = e1071::skewness(skew_i_vox, na.rm = T),
i_skew_kurt = e1071::kurtosis(skew_i_vox, na.rm = T),
i_kurt_med = median(kurt_i_vox, na.rm = T),
i_kurt_mean = mean(kurt_i_vox, na.rm = T),
i_kurt_var = var(kurt_i_vox, na.rm = T),
i_kurt_sd = sd(kurt_i_vox, na.rm = T),
i_kurt_cv = sd(kurt_i_vox, na.rm = T)/mean(kurt_i_vox, na.rm = T),
i_kurt_IQR = IQR(kurt_i_vox, na.rm = T),
i_kurt_skew = e1071::skewness(kurt_i_vox, na.rm = T),
i_kurt_kurt = e1071::kurtosis(kurt_i_vox, na.rm = T),
P_Di_med = median(npoints_below, na.rm = T),
P_Di_mean = mean(npoints_below, na.rm = T),
P_Di_var = var(npoints_below, na.rm = T),
P_Di_sd = sd(npoints_below, na.rm = T),
P_Di_cv = sd(npoints_below, na.rm = T)/mean(npoints_below, na.rm = T),
P_Di_IQR = IQR(npoints_below, na.rm = T),
P_Di_skew = e1071::skewness(npoints_below, na.rm = T),
P_Di_kurt = e1071::kurtosis(npoints_below, na.rm = T),
npoints_above_med = median(npoints_above, na.rm = T),
npoints_above_mean = mean(npoints_above, na.rm = T),
npoints_above_var = var(npoints_above, na.rm = T),
npoints_above_sd = sd(npoints_above, na.rm = T),
npoints_above_cv = sd(npoints_above, na.rm = T)/mean(npoints_above, na.rm = T),
npoints_above_IQR = IQR(npoints_above, na.rm = T),
npoints_above_skew = e1071::skewness(npoints_above, na.rm = T),
npoints_above_kurt = e1071::kurtosis(npoints_above, na.rm = T),
FR_Di_med = median(FR_Di, na.rm = T),
FR_Di_mean = mean(FR_Di, na.rm = T),
FR_Di_var = var(FR_Di, na.rm = T),
FR_Di_sd = sd(FR_Di, na.rm = T),
FR_Di_cv = sd(FR_Di, na.rm = T)/mean(FR_Di, na.rm = T),
FR_Di_IQR = IQR(FR_Di, na.rm = T),
FR_Di_skew = e1071::skewness(FR_Di, na.rm = T),
FR_Di_kurt = e1071::kurtosis(FR_Di, na.rm = T),
i_Di_med = median(i_Di, na.rm = T),
i_Di_mean = mean(i_Di, na.rm = T),
i_Di_var = var(i_Di, na.rm = T),
i_Di_sd = sd(i_Di, na.rm = T),
i_Di_cv = sd(i_Di, na.rm = T)/mean(i_Di, na.rm = T),
i_Di_IQR = IQR(i_Di, na.rm = T),
i_Di_skew = e1071::skewness(i_Di, na.rm = T),
i_Di_kurt = e1071::kurtosis(i_Di, na.rm = T)
)
View(voxel_summ)
160*6
160*40
voxel_sum <- cbind(voxel_summ, HB_metrics)
voxel_summ <- cbind(voxel_summ, HB_metrics)
# find the median z for the voxels with highest number of points (SVi) for each
SVM <- fullvox %>% group_by(X,Y) %>%
summarize(Z = Z[which.max(SVi)], SVM_density = max(SVi), median_Z = med_z_vox[which.max(SVi)])
# for loop that identifies the SVM and calculates summary statistics for points above
SVM_list = list()
for(i in 1:nrow(SVM)){
vox_above <- fullvox %>% filter(Z > SVM$Z[i] & X ==SVM$X[i] & Y == SVM$Y[i])
vox_above$Z_list<- lapply(vox_above$Z_list, "length<-", max(lengths(vox_above$Z_list)))
hts_above <- as.numeric(do.call(cbind,vox_above$Z_list))
SVM_all_mts <- data.frame(SVM_med = median(hts_above, na.rm = T))
SVM_all_mts <- cbind(SVM[i,], median_Z_above = median(hts_above, na.rm = T),
mean_Z_above = mean(hts_above, na.rm = T),
sd_Z_above = sd(hts_above, na.rm = T),
var_Z_above = sd(hts_above, na.rm = T)^2,
cv_Z_above = sd(hts_above, na.rm = T)/ mean(hts_above, na.rm = T),
IQR_Z_above = IQR(hts_above, na.rm = T),
skew_Z_above = e1071::skewness(hts_above, na.rm = T),
kurt_Z_above = e1071::kurtosis(hts_above, na.rm = T))
SVM_list[[i]] <- SVM_all_mts
}
# extract calculated metrics
SVM_all <- do.call(rbind, SVM_list)
SVM_all <- as.data.frame(SVM_all)
# create averages fro each metric (e.g., sd, variance, skewness)
SVM_summ <- SVM_all %>% ungroup() %>%
summarise(SVM_mean = mean(mean_Z_above, na.rm = T), SVM_median = mean(median_Z_above, na.rm = T),
SVM_sd = mean(sd_Z_above, na.rm = T), SVM_var = mean(var_Z_above, na.rm = T),
SVM_cv = mean(cv_Z_above, na.rm = T), SVM_cv = mean(cv_Z_above, na.rm = T),
SVM_IQR = mean(IQR_Z_above, na.rm = T), SVM_skew = mean(skew_Z_above, na.rm = T),
SVM_kurt = mean(kurt_Z_above, na.rm = T))
voxel_summ <- cbind(voxel_summ, SVM_summ)
# create column indicating if voxel has returns (1) or does not (0)
fullvox$empty <- ifelse(fullvox$SVi == 0, 0,1)
# for loop to calculate the proportion of empty voxels in each height bin (voxel height)
layer_prop = list()
for(i in 1:length(unique(fullvox$Z))){
p <- fullvox %>% filter(Z == unique(Z)[i]) %>% summarize(p0 = sum(empty)/sum(fullvox$empty))
layer_prop[[i]] <- p
}
p <- do.call(rbind,layer_prop)
# calculate the different diversity indicies similar to Ehbrecht et al. (2016) and Pearse et al. (2019)
p <-  p %>% mutate(pln = p0*log(p0))
p <- p %>% mutate(p2 = p0^2)
ENL_d0 <- sum(p$p0^0)
ENL_d1 <- exp(-sum(p$pln)) ## exponential Shannon-Index
ENL_d2 <- 1/sum(p$p2) ## inverse Simpson-Index
# add indicies to voxel_summ df
voxel_summ <- cbind(voxel_summ, ENL_d0, ENL_d1, ENL_d2)
cc_list = list()
thr_above = seq(from = 3, to = 21, by = 3)
for(i in 1:length(thr_above)){
cc_above <- fullvox %>% filter(if(thr_above[i] < max(thr_above)) {Z <= thr_above[i]} else(Z <= max(Z))) %>% summarize(cc = sum(empty)/n())
cc_above$thr_above <- paste0("cc_above_thr_", thr_above[i])
cc_list[[i]] <- cc_above
}
# extract canopy closure and prepare to merge with voxel_summ
cc_above <- do.call(rbind, cc_list)
cc_above_df <- as.data.frame(t(cc_above[,1]))
colnames(cc_above_df) <- cc_above[,2]
# add closure metrics to voxel_summ df
voxel_summ <- cbind(voxel_summ, cc_above_df)
pcc_list = list()
ht_bin = c(1, 5, 10, 15, 20)
npoints_XY <- fullvox %>% group_by(X,Y) %>% summarize(npoints = sum(SVi, na.rm = T))
for(i in 1:length(ht_bin)){
point_density <- fullvox %>%
filter(if(ht_bin[i] < max(ht_bin)) { Z >= ht_bin[i] & Z < ht_bin[i+1]}  else(Z >= max(ht_bin))) %>%
group_by(X,Y) %>%
summarize(pt_density = sum(SVi))
if(nrow(point_density) == 0){next}
point_density$pcc = point_density$pt_density/ npoints_XY$npoints
point_density$ht_bin <- ht_bin[i]
pcc_list[[i]] <- point_density
}
pcc_bins <- do.call(rbind, pcc_list)
pcc_bins$pcc[is.na(pcc_bins$pcc)] <- 0
pcc_XY <- pcc_bins %>% group_by(X,Y) %>% summarise(pcc = sum(pcc))
pcc <- mean(pcc_XY$pcc)
voxel_summ <- cbind(voxel_summ, pcc = pcc)
vci_list = list()
vci_bin <- c(.5,1,2,3,4,5)
for(i in 1:length(vci_bin)){
res <- vci_bin[i]
vox_vci <- voxel_metrics(las, func = vox_mt(Z, as.numeric(Intensity)), res = res)
# Generate all the possible voxels
x = seq(min(vox_vci$X), max(vox_vci$X), res)
y = seq(min(vox_vci$Y), max(vox_vci$Y), res)
z = seq(min(vox_vci$Z), max(vox_vci$Z), res)
all_vox_vci = expand.grid(X = x, Y = y, Z = z)
data.table::setDT(all_vox_vci)
# Merge both unsing a join
fullvox_vci = vox_vci[all_vox_vci, on = c("X", "Y", "Z")]
# crop to poly
fullvox_vci.df <- as.data.frame(fullvox_vci)
fullvox_vci.sf <- st_as_sf(fullvox_vci.df, coords = c('X', 'Y'), crs = st_crs(sf_poly))
fullvox_vci.crop <- st_intersection(sf_poly, fullvox_vci.sf)
fullvox_vci <- cbind(X = st_coordinates(fullvox_vci.crop)[,1], Y = st_coordinates(fullvox_vci.crop)[,2],
fullvox_vci.crop[,c(which(colnames(fullvox_vci.crop) =="Z"):ncol(fullvox_vci.crop))])
fullvox_vci <- as.data.frame(fullvox_vci)
fullvox_vci <- fullvox_vci %>% mutate(id_xyz = paste0(X,"-",Y,"-",Z))
fullvox_vci$SVi[is.na(fullvox_vci$SVi)] <- 0
npoints_XY_vci <- fullvox_vci %>% group_by(X,Y) %>% summarize(npoints = sum(SVi), na.rm = T)
npoints_XY_vci$npoints[is.na(npoints_XY_vci$npoints)] <- 0
# for loop to calculate VCI based on Shannon diversity inde
layer_vci = list()
for(j in 1:length(unique(fullvox_vci$Z))){
p <- fullvox_vci %>%
filter(Z == unique(Z)[j]) %>%
summarize(p0 = sum(SVi)/sum(npoints_XY_vci$npoints))
p$layer <- unique(fullvox_vci$Z)[j]
layer_vci[[j]] <- p
}
p <- do.call(rbind,layer_vci)
p$pxlog <- p$p0*log(p$p0)
p$pxlog[is.na(p$pxlog)] <- 0
vci_i <- data.frame(vci = (-sum(p$pxlog))/log(nrow(p)), bin = vci_bin[i])
vci_list[[i]] <- vci_i
}
vcis <- do.call(rbind, vci_list)
vci_all <- as.data.frame(t(vcis[,1]))
colnames(vci_all) <- paste0("HB-",vcis[,2])
# add to voxel summary df
voxel_summ <- cbind(voxel_summ, vci_all)
return(voxel_summ)
paste0("HB", i, colnames(Z_vox))
paste0("HB", unique(Z)[i] colnames(Z_vox))
paste0("HB", unique(Z)[i], colnames(Z_vox))
paste0("HB", unique(fullvox$Z)[i], colnames(Z_vox))
devtools::document()
